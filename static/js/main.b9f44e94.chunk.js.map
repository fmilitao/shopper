{"version":3,"sources":["shopper/redux/state.ts","shopper/redux/localStorage.ts","shopper/components/common/Notifier.tsx","shopper/redux/slice.ts","shopper/redux/store.ts","shopper/components/shopping-list/AddButton.tsx","shopper/components/shopping-list/AddButtonContainer.tsx","shopper/components/item-list/AddButton.tsx","shopper/components/item-list/AddButtonContainer.tsx","shopper/components/common/Menu.tsx","shopper/components/app-bar/AppBar.tsx","shopper/components/app-bar/AppBarContainer.tsx","version.ts","shopper/components/common/List.tsx","shopper/components/shopping-list/ListContainer.tsx","shopper/components/common/Dialog.tsx","shopper/importer.ts","shopper/components/shopping-list/GenericDialog.tsx","shopper/components/shopping-list/AddDialogContainer.tsx","shopper/components/shopping-list/AddDialog.tsx","shopper/components/item-list/GenericDialog.tsx","shopper/components/item-list/AddDialog.tsx","shopper/components/item-list/AddDialogContainer.tsx","shopper/components/shopping-list/EditDialogContainer.tsx","shopper/components/shopping-list/EditDialog.tsx","shopper/components/item-list/EditDialogContainer.tsx","shopper/components/item-list/EditDialog.tsx","shopper/components/item-list/ListContainer.tsx","shopper/components/Main.tsx","shopper/App.tsx","serviceWorker.ts","index.tsx"],"names":["DialogType","ShopperStateSchema","title","type","properties","selectedList","lists","minItems","items","required","name","minLength","comment","enabled","additionalProperties","key","validate","obj","test","Ajv","allErrors","compile","schema","console","error","JSON","stringify","errors","Error","logger","toast","transition","cssTransition","enter","exit","duration","appendPosition","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","defaultValue","raw","localStorage","getItem","parse","load","undefined","isInBounds","index","array","length","shopperSlice","createSlice","reducers","addList","state","action","dialogState","payload","push","map","editList","EDIT_LIST","info","deleteList","splice","deleted","listUndo","selectList","deselectList","itemUndo","undoItemDeletion","listIndex","undo","pop","warn","undoListDeletion","addItem","editItem","EDIT_ITEM","itemIndex","item","deleteItem","toggleItem","openAddListDialog","ADD_LIST","openEditListDialog","openAddItemDialog","ADD_ITEM","openEditItemDialog","closeDialog","copyToClipboard","navigator","clipboard","writeText","updateState","actions","reducer","store","configureStore","sliceActions","importFromClipboard","dispatch","readText","then","value","catch","log","subscribe","shallowClone","setItem","save","getState","useStyles","makeStyles","theme","createStyles","button","color","connector","connect","openDialog","props","classes","IconButton","className","edge","aria-label","onClick","React","useState","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","label","MenuItem","root","flexGrow","menuButton","rightButton","display","justifyContent","alignItems","list","listName","totalItemCount","pendingItemCount","reduce","prev","curr","Number","AppBar","Toolbar","Typography","variant","SimpleList","sorted","sort","a","b","List","component","ListItem","style","backgroundColor","ListItemText","primary","secondary","ListItemSecondaryAction","onEdit","onDelete","palette","background","default","flex","height","flexDirection","overflow","grey","dispatchToProps","commit","Dialog","isOpen","onEnter","onOpen","DialogTitle","DialogContent","DialogContentText","description","children","DialogActions","Button","cancel","disabled","isValid","ok","regex","notNull","importText","rawText","split","txt","trim","filter","match","newValue","initialCheck","isValidCheck","setValidCheck","tmpValue","setTmpValue","includeClipboard","setIncludeClipboard","target","checked","count","descriptionText","TextField","autoFocus","margin","onChange","fullWidth","InputLabelProps","shrink","isEdit","FormControlLabel","control","Checkbox","okText","placeholder","initialValue","isListSelected","isItemView","flexFlow","Notifier","createMuiTheme","MuiButtonBase","disableRipple","transitions","create","app","minHeight","ThemeProvider","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","App","document","getElementById","param","URL","href","searchParams","get","isDebug","ready","unregister","message","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b9f44e94.chunk.js","sourcesContent":["import { ThunkAction, Action } from '@reduxjs/toolkit';\nexport interface Item {\n  name: string;\n  comment: string;\n  enabled: boolean;\n}\n\nconst ItemSchema = {\n  type: 'object',\n  required: ['name', 'enabled'],\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    comment: {\n      type: 'string',\n    },\n    enabled: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport interface List {\n  name: string;\n  items: Item[];\n}\n\nconst ListSchema = {\n  type: 'object',\n  required: ['name', 'items'],\n  properties: {\n    name: {\n      type: 'string',\n    },\n    items: {\n      type: 'array',\n      minItems: 0,\n      items: ItemSchema,\n    },\n  },\n};\n\nexport interface ShopperState {\n  selectedList?: number;\n  lists: List[];\n  // not in schema\n  dialogState?: DialogState;\n  listUndo?: List[];\n  itemUndo?: Item[];\n}\n\nexport const ShopperStateSchema = {\n  title: 'ShopperState',\n  type: 'object',\n  properties: {\n    selectedList: {\n      type: 'number',\n    },\n    lists: {\n      type: 'array',\n      minItems: 0,\n      items: ListSchema,\n    },\n  },\n  additionalProperties: false,\n  required: ['lists'],\n};\n\n// not in schema\nexport enum DialogType {\n  ADD_LIST,\n  EDIT_LIST,\n  ADD_ITEM,\n  EDIT_ITEM,\n}\n\nexport interface AddListDialog {\n  type: DialogType.ADD_LIST;\n}\nexport interface AddItemDialog {\n  type: DialogType.ADD_ITEM;\n}\n\nexport interface EditListDialog {\n  type: DialogType.EDIT_LIST;\n  index: number;\n}\n\nexport interface EditItemDialog {\n  type: DialogType.EDIT_ITEM;\n  index: number;\n}\n\nexport type DialogState =\n  | AddListDialog\n  | AddItemDialog\n  | EditListDialog\n  | EditItemDialog;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  ShopperState,\n  unknown,\n  Action<string>\n>;\n","import Ajv from 'ajv';\n\nimport type { ShopperState } from './state';\nimport { ShopperStateSchema as schema } from './state';\n\nconst key = 'shopper-state';\n\nexport function validate(obj: unknown): ShopperState {\n  const ajv = new Ajv({ allErrors: true });\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return obj as ShopperState;\n  }\n  console.error(`Existing state object:\n${JSON.stringify(obj, null, 2)}\nFailed validation:\n${JSON.stringify(test.errors, null, 2)}`);\n\n  throw Error('Invalid object');\n}\n\nexport function load(defaultValue: ShopperState): ShopperState {\n  const raw = localStorage.getItem(key);\n  if (raw === null) {\n    return defaultValue;\n  }\n  const object = JSON.parse(raw);\n  return validate(object);\n}\n\nexport function save(state: ShopperState) {\n  const shallowClone = {\n    ...state,\n    // ensure not saved\n    dialogState: undefined,\n    listUndo: undefined,\n    itemUndo: undefined,\n  };\n  localStorage.setItem(key, JSON.stringify(shallowClone));\n}\n","import React from 'react';\nimport { ToastContainer, cssTransition, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const logger = toast;\n\nexport default function () {\n  // copied from Slide to change durations\n  // https://github.com/fkhadra/react-toastify/blob/da5fab4006456434d7ad29360aa702d2c725a9a1/src/components/Transitions.tsx\n  const transition = cssTransition({\n    enter: `Toastify__slide-enter`,\n    exit: `Toastify__slide-exit`,\n    duration: [200, 200],\n    appendPosition: true,\n  });\n\n  // more customization?\n  // https://github.com/fkhadra/react-toastify/issues/455\n\n  return (\n    <ToastContainer\n      transition={transition}\n      position=\"bottom-left\"\n      autoClose={2000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      closeOnClick={false}\n      rtl={false}\n      pauseOnFocusLoss={false}\n      draggable={false}\n      pauseOnHover={false}\n    />\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ShopperState, DialogType, AppThunk } from './state';\nimport { load, validate } from './localStorage';\nimport { logger } from '../components/common/Notifier';\n\nconst defaultValue: ShopperState = {\n  selectedList: undefined,\n  lists: [],\n};\n\nconst initialState: ShopperState = load(defaultValue);\n\nconst isInBounds = <T>(index: number, array: T[]) =>\n  index >= 0 && index < array.length;\n\nexport const shopperSlice = createSlice({\n  name: 'shopper',\n  initialState,\n  reducers: {\n    // list\n    addList: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        items: { name: string; comment: string }[];\n      }>\n    ) => {\n      state.dialogState = undefined;\n      const { name, items } = action.payload;\n      state.lists.push({\n        name,\n        items: items.map(({ name, comment }) => ({\n          name,\n          comment,\n          enabled: true,\n        })),\n      });\n    },\n    editList: (state, action: PayloadAction<string>) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_LIST) {\n        const { index } = dialogState;\n        const name = action.payload;\n        if (isInBounds(index, state.lists)) {\n          state.lists[index].name = name;\n          logger.info('List updated.');\n        }\n      }\n      state.dialogState = undefined;\n    },\n    deleteList: (state, action: PayloadAction<number>) => {\n      const index = action.payload;\n      if (isInBounds(index, state.lists)) {\n        const [deleted] = state.lists.splice(index, 1);\n\n        if (state.listUndo === undefined) {\n          state.listUndo = [];\n        }\n        state.listUndo.push(deleted);\n\n        logger.info('List deleted.');\n      }\n    },\n    selectList: (state, action: PayloadAction<number>) => {\n      state.selectedList = action.payload;\n    },\n    deselectList: state => {\n      state.selectedList = undefined;\n      state.itemUndo = undefined;\n    },\n    // undo\n    undoItemDeletion: state => {\n      const listIndex = state.selectedList;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        state.itemUndo !== undefined &&\n        state.itemUndo.length > 0\n      ) {\n        const undo = state.itemUndo.pop();\n        if (undo !== undefined) {\n          state.lists[listIndex].items.push(undo);\n          logger.info('Item deletion undone.');\n          return;\n        }\n      }\n      logger.warn('Nothing to undo.');\n    },\n    undoListDeletion: state => {\n      if (state.listUndo !== undefined && state.listUndo.length > 0) {\n        const undo = state.listUndo.pop();\n        if (undo !== undefined) {\n          state.lists.push(undo);\n          logger.info(`List ${undo.name} deletion undone.`);\n          return;\n        }\n      }\n      logger.warn('Nothing to undo.');\n    },\n    // item\n    addItem: (\n      state,\n      action: PayloadAction<{ name: string; comment: string }>\n    ) => {\n      state.dialogState = undefined;\n      const { name, comment } = action.payload;\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        state.lists[listIndex].items.push({\n          name,\n          comment,\n          enabled: true,\n        });\n      }\n    },\n    editItem: (\n      state,\n      action: PayloadAction<{ name: string; comment: string }>\n    ) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_ITEM) {\n        const { index } = dialogState;\n        const { name, comment } = action.payload;\n        const listIndex = state.selectedList;\n        const itemIndex = index;\n        if (\n          listIndex !== undefined &&\n          isInBounds(listIndex, state.lists) &&\n          isInBounds(itemIndex, state.lists[listIndex].items)\n        ) {\n          const item = state.lists[listIndex].items[itemIndex];\n          item.name = name;\n          item.comment = comment;\n        }\n\n        logger.info('Item updated.');\n      }\n      state.dialogState = undefined;\n    },\n    deleteItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const [deleted] = state.lists[listIndex].items.splice(itemIndex, 1);\n\n        if (state.itemUndo === undefined) {\n          state.itemUndo = [];\n        }\n        state.itemUndo.push(deleted);\n\n        logger.info('Item deleted.');\n      }\n    },\n    toggleItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const item = state.lists[listIndex].items[itemIndex];\n        item.enabled = !item.enabled;\n      }\n    },\n    // dialog\n    openAddListDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_LIST,\n      };\n    },\n    openEditListDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_LIST,\n        index: action.payload,\n      };\n    },\n    openAddItemDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_ITEM,\n      };\n    },\n    openEditItemDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_ITEM,\n        index: action.payload,\n      };\n    },\n    closeDialog: state => {\n      state.dialogState = undefined;\n    },\n    copyToClipboard: state => {\n      if (navigator?.clipboard?.writeText) {\n        navigator.clipboard.writeText(JSON.stringify(state));\n        logger.info('Copied to clipboard.');\n      } else {\n        logger.error('ERROR: Missing clipboard browser functionality');\n      }\n    },\n    updateState: (state, action: PayloadAction<ShopperState>) => {\n      state.lists = action.payload.lists;\n      state.selectedList = undefined;\n    },\n  },\n});\n\nexport const importFromClipboard = (): AppThunk => dispatch => {\n  if (navigator?.clipboard?.readText) {\n    navigator.clipboard\n      .readText()\n      .then(value => {\n        const obj = JSON.parse(value);\n        const state = validate(obj);\n        dispatch(actions.updateState(state));\n        logger.info('Imported from clipboard');\n      })\n      .catch(error => {\n        console.log(error);\n        logger.error(`ERROR: ${error}`);\n      });\n  } else {\n    logger.error('ERROR: Missing clipboard browser functionality');\n  }\n};\n\nexport const { actions, reducer } = shopperSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { reducer, actions as sliceActions, importFromClipboard } from './slice';\nimport { save } from './localStorage';\n\nexport const store = configureStore({ reducer });\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const actions = {\n  ...sliceActions,\n  importFromClipboard,\n};\n\n// auto-save\nstore.subscribe(() => {\n  const state = store.getState();\n  save(state);\n  // console.log(JSON.stringify(state));\n});\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add list\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddListDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add item\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddItemDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  actions: {\n    label: string;\n    action: () => void;\n  }[];\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        className={classes.button}\n        aria-controls=\"simple-menu\"\n        edge=\"end\"\n        aria-label=\"menu\"\n        color=\"secondary\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.actions.map(({ label, action }, index) => (\n          <MenuItem\n            key={index}\n            onClick={() => {\n              handleClose();\n              action();\n            }}\n          >\n            {label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/ArrowBackRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddList from '../shopping-list/AddButtonContainer';\nimport AddItem from '../item-list/AddButtonContainer';\nimport Menu from '../common/Menu';\n\nimport version from '../../../version';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 0,\n    },\n    title: {\n      flexGrow: 0,\n    },\n    menuButton: {\n      flexGrow: 0,\n    },\n    rightButton: {\n      // flexDirection: 'row',\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      // border: '1px solid blue',\n    },\n  })\n);\n\ninterface Props {\n  selectedList?: {\n    listName: string;\n    pendingItemCount: number;\n    totalItemCount: number;\n  };\n  deselectList: () => void;\n  copyToClipboard: () => void;\n  importFromClipboard: () => void;\n  undoItemDeletion: () => void;\n  undoListDeletion: () => void;\n}\n\nconst shopperTitle = 'Shopper';\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n\n  let title = shopperTitle;\n  if (props.selectedList) {\n    const { listName, pendingItemCount, totalItemCount } = props.selectedList;\n    title = listName!;\n    if (totalItemCount! > 0) {\n      title = `(${pendingItemCount}) ${title}`;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.selectedList && (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => props.deselectList()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => {\n              if (title === shopperTitle) {\n                toast.info(version);\n              }\n            }}\n          >\n            {title}\n          </Typography>\n          <div className={classes.rightButton}>\n            {props.selectedList ? <AddItem /> : <AddList />}\n          </div>\n          <Menu\n            actions={[\n              {\n                label: 'import state from clipboard',\n                action: () => props.importFromClipboard(),\n              },\n              {\n                label: 'copy state to clipboard',\n                action: () => props.copyToClipboard(),\n              },\n              {\n                label: `undo ${props.selectedList ? 'item' : 'list'} deletion`,\n                action: () =>\n                  props.selectedList\n                    ? props.undoItemDeletion()\n                    : props.undoListDeletion(),\n              },\n            ]}\n          ></Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport type { RootState } from '../../redux/store';\nimport { actions } from '../../redux/store';\nimport Component from './AppBar';\n\nexport const mapStateToProps = (state: RootState) => {\n  if (state.selectedList !== undefined) {\n    const list = state.lists[state.selectedList!];\n    const listName = list.name;\n    const totalItemCount = list.items.length;\n    const pendingItemCount = list.items.reduce(\n      (prev, curr) => prev + Number(!!curr.enabled),\n      0\n    );\n    return {\n      selectedList: {\n        totalItemCount,\n        pendingItemCount,\n        listName,\n      },\n    };\n  }\n\n  return {\n    selectedList: undefined,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  deselectList: () => actions.deselectList(),\n  copyToClipboard: () => actions.copyToClipboard(),\n  importFromClipboard: () => actions.importFromClipboard(),\n  undoItemDeletion: () => actions.undoItemDeletion(),\n  undoListDeletion: () => actions.undoListDeletion(),\n});\n\nexport default connector(Component);\n","export default 'commit: c85c4a3 (2020-06-20T14:04:52.614Z)';\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Menu from './Menu';\n\ninterface Props {\n  lists: { name: string; comment: string; enabled?: boolean; index: number }[];\n  onClick(index: number): void;\n  onEdit(index: number): void;\n  onDelete(index: number): void;\n}\n\nexport default function SimpleList(props: Props) {\n  const classes = useStyles();\n\n  // sorts only by enabled / disabled\n  const sorted = props.lists.sort(\n    (a, b) => Number(!a.enabled) - Number(!b.enabled)\n  );\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" className={classes.list}>\n        {sorted.map(({ name, comment, enabled, index }) => (\n          <ListItem\n            // style override here so that ripple effect does not take priority\n            // enabled is true or undefined: white, else: gray\n            style={{ backgroundColor: enabled !== false ? 'white' : 'gray' }}\n            key={index}\n            button\n            onClick={() => props.onClick(index)}\n          >\n            <ListItemText primary={name} secondary={comment} />\n            <ListItemSecondaryAction className={classes.menuButton}>\n              <Menu\n                actions={[\n                  { label: 'edit', action: () => props.onEdit(index) },\n                  { label: 'delete', action: () => props.onDelete(index) },\n                ]}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.default,\n      flex: '1',\n      height: '90vh',\n      // border: '1px solid red',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      overflow: 'scroll',\n      // border: '1px solid blue',\n    },\n    menuButton: {\n      color: theme.palette.grey[500],\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  return {\n    lists: state.lists.map(({ name, items }, index) => ({\n      name,\n      comment: `${items.length} items`,\n      index,\n    })),\n  };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteList(index),\n  onEdit: (index: number) => actions.openEditListDialog(index),\n  onClick: (index: number) => actions.selectList(index),\n};\n\nconst connector = connect(mapToListState, dispatchToProps);\n\nexport default connector(List);\n","import React, { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ninterface Props {\n  isOpen: boolean;\n  children: ReactNode | ReactNode[];\n\n  title: string;\n  ok: string;\n  cancel: string;\n  description: string;\n  isValid: boolean;\n\n  onClose: (commit: boolean) => void;\n  onOpen: () => void;\n}\n\nexport default function (props: Props) {\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onClose(true);\n    } else {\n      props.onClose(false);\n    }\n  }\n\n  function handleOpen() {\n    props.onOpen();\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onEnter={() => handleOpen()}\n        onClose={() => handleClose(false)}\n      >\n        <DialogTitle>{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          {props.children}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)} color=\"primary\">\n            {props.cancel}\n          </Button>\n          <Button\n            onClick={() => handleClose(true)}\n            color=\"primary\"\n            disabled={!props.isValid}\n          >\n            {props.ok}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","const regex = /(.*) (\\d+.*)/;\n\nfunction notNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nexport function importText(\n  rawText: string\n): { name: string; comment: string }[] {\n  return rawText\n    .split('\\n')\n    .map(txt => txt.trim())\n    .filter(txt => txt.length > 0)\n    .map(txt => {\n      const match = txt.match(regex);\n      if (!match) {\n        return null;\n      }\n      const [, name, comment] = match;\n      return { name, comment };\n    })\n    .filter(notNull);\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '../common/Dialog';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { importText } from '../../importer';\n\ninterface Props {\n  value: string;\n  title: string;\n  okText: string;\n  descriptionText: string;\n  // internal\n  isOpen: boolean;\n  isEdit: boolean;\n  onClose: (value?: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst isValid = (newValue: string) => newValue.trim().length > 0;\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n  const [includeClipboard, setIncludeClipboard] = React.useState<{\n    includeClipboard: boolean;\n    items: { name: string; comment: string }[];\n  }>({\n    includeClipboard: false,\n    items: [],\n  });\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onClose({\n        name: tmpValue,\n        items: includeClipboard.includeClipboard ? includeClipboard.items : [],\n      });\n    } else {\n      props.onClose();\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n    setIncludeClipboard({ includeClipboard: false, items: [] });\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  async function importFromClipboard() {\n    try {\n      const txt = await navigator.clipboard.readText();\n      return importText(txt);\n    } catch (error) {\n      console.log(`Error importing from clipboard: ${error}`);\n      return [];\n    }\n  }\n\n  async function handleIncludeClipboard(event: any) {\n    const includeClipboard = event.target.checked;\n    const items = includeClipboard ? await importFromClipboard() : [];\n\n    setIncludeClipboard({\n      includeClipboard,\n      items,\n    });\n  }\n\n  const count = includeClipboard.includeClipboard\n    ? `${includeClipboard.items.length} `\n    : ' ';\n  const label = `Include ${count}items from clipboard`;\n\n  return (\n    <Dialog\n      isOpen={props.isOpen}\n      isValid={isValidCheck}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      title={props.title}\n      description={props.descriptionText}\n      ok=\"ok\"\n      cancel=\"cancel\"\n    >\n      <TextField\n        error={!isValidCheck}\n        autoFocus\n        margin=\"dense\"\n        label=\"List name\"\n        type=\"text\"\n        onChange={handleChange}\n        fullWidth\n        value={tmpValue}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      {!props.isEdit && (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={includeClipboard.includeClipboard}\n              onChange={handleIncludeClipboard}\n              color=\"primary\"\n            />\n          }\n          label={label}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_LIST,\n});\n\nconst connector = connect(mapStateToProps, {\n  onClose: (value?: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => {\n    if (value) {\n      return actions.addList(value);\n    }\n    return actions.closeDialog();\n  },\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: (value?: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst initialValue = '';\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={initialValue}\n      title=\"Create List\"\n      okText=\"Create\"\n      isEdit={false}\n      descriptionText=\"Pick the name for your new list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '../common/Dialog';\n\ninterface Props {\n  title: string;\n  okText: string;\n  descriptionText: string;\n  // ...\n  isOpen: boolean;\n  value: { name: string; comment: string };\n  onClose: (value?: { name: string; comment: string }) => void;\n}\n\nconst isValid = (newValue: { name: string; comment: string }) => ({\n  name: newValue.name.trim().length > 0,\n  // comments are always valid\n  comment: true,\n});\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onClose(tmpValue);\n    } else {\n      props.onClose();\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n  }\n\n  function handleNameChange(event: any) {\n    const newValue = {\n      name: event.target.value,\n      comment: tmpValue.comment,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleCommentChange(event: any) {\n    const newValue = {\n      name: tmpValue.name,\n      comment: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  return (\n    <div>\n      <Dialog\n        isOpen={props.isOpen}\n        description={props.descriptionText}\n        isValid={isValidCheck.name && isValidCheck.comment}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        title={props.title}\n        ok=\"ok\"\n        cancel=\"cancel\"\n      >\n        <TextField\n          error={!isValidCheck.name}\n          autoFocus\n          margin=\"dense\"\n          label=\"Item name\"\n          placeholder=\"What's the name of the item?\"\n          type=\"text\"\n          onChange={handleNameChange}\n          fullWidth\n          value={tmpValue.name}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          error={!isValidCheck.comment}\n          margin=\"dense\"\n          label=\"Comment (optional)\"\n          placeholder=\"How many of this item?\"\n          value={tmpValue.comment}\n          onChange={handleCommentChange}\n          type=\"text\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport ItemDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: (value?: { name: string; comment: string }) => void;\n}\n\nconst initialValue = { name: '', comment: '' };\n\nexport default function (props: Props) {\n  return (\n    <ItemDialog\n      value={initialValue}\n      title=\"Create Item\"\n      okText=\"Create\"\n      descriptionText=\"Pick the name for your new item.\"\n      {...props}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_ITEM,\n});\n\nconst connector = connect(mapStateToProps, {\n  onClose: (value?: { name: string; comment: string }) => {\n    if (value) {\n      return actions.addItem(value);\n    }\n    return actions.closeDialog();\n  },\n});\n\nexport default connector(Component);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState } = state;\n  if (\n    dialogState?.type === DialogType.EDIT_LIST &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists.length\n  ) {\n    const initialValue = state.lists[dialogState.index].name;\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: '',\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onClose: (value?: string) => {\n    if (value) {\n      return actions.editList(value);\n    }\n    return actions.closeDialog();\n  },\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: string;\n  onClose: (value?: string) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      isEdit={true}\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n      onClose={value => (value ? props.onClose(value.name) : props.onClose())}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState, selectedList } = state;\n  if (\n    selectedList !== undefined &&\n    selectedList >= 0 &&\n    selectedList < state.lists.length &&\n    dialogState?.type === DialogType.EDIT_ITEM &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists[selectedList].items.length\n  ) {\n    const initialValue = state.lists[selectedList].items[dialogState.index];\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: { name: '', comment: '' },\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onClose: (value?: { name: string; comment: string }) => {\n    if (value) {\n      return actions.editItem(value);\n    }\n    return actions.closeDialog();\n  },\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: { name: string; comment: string };\n  onClose: (value?: { name: string; comment: string }) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  const index = state.selectedList;\n  if (index !== undefined) {\n    return {\n      lists: state.lists[index].items.map(\n        ({ name, comment, enabled }, index) => ({\n          name,\n          comment,\n          enabled,\n          index,\n        })\n      ),\n    };\n  }\n  return { lists: [] };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteItem(index),\n  onEdit: (index: number) => actions.openEditItemDialog(index),\n  onClick: (index: number) => actions.toggleItem(index),\n};\n\nconst connector = connect(mapToListState, dispatchToProps);\n\nexport default connector(List);\n","import { ConnectedProps, connect } from 'react-redux';\nimport React from 'react';\nimport AppBar from './app-bar/AppBarContainer';\nimport List from './shopping-list/ListContainer';\nimport AddListDialog from './shopping-list/AddDialogContainer';\nimport AddItemDialog from './item-list/AddDialogContainer';\nimport EditListDialog from './shopping-list/EditDialogContainer';\nimport EditItemDialog from './item-list/EditDialogContainer';\nimport ItemList from './item-list/ListContainer';\nimport { RootState } from '../redux/store';\nimport Notifier from './common/Notifier';\n\nconst connector = connect((state: RootState) => ({\n  isListSelected: state.selectedList !== undefined,\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction Main(props: Props) {\n  const isItemView = props.isListSelected;\n  return (\n    <div\n      style={{\n        flex: 1,\n        // border: '1px solid blue',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n      }}\n    >\n      <AppBar />\n      {isItemView ? <ItemList /> : <List />}\n      {isItemView ? <AddItemDialog /> : <AddListDialog />}\n      {isItemView ? <EditItemDialog /> : <EditListDialog />}\n      <Notifier />\n    </div>\n  );\n}\n\nexport default connector(Main);\n","import React from 'react';\nimport Main from './components/Main';\nimport {\n  // createMuiTheme,\n  // https://github.com/mui-org/material-ui/issues/13394\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  Theme,\n  makeStyles,\n  createStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  transitions: {\n    // Disable transitions since they make UI feel slow\n    create: () => 'none',\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      minHeight: '100vh',\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      flexDirection: 'column',\n    },\n  })\n);\n\nexport default function () {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shopper/App';\nimport { store } from './shopper/redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nfunction isDebug(): boolean {\n  const url = new URL(window.location.href);\n  const param = url.searchParams.get('debug');\n  return Boolean(param);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  console.log('No service worker enabled.');\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}