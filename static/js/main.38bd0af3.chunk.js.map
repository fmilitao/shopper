{"version":3,"sources":["shopper/redux/state.ts","shopper/redux/localStorage.ts","shopper/components/common/Notifier.tsx","shopper/redux/id.ts","shopper/components/google-sheets/gsheets-serde.ts","shopper/components/google-sheets/spreadsheet.ts","shopper/redux/slice.ts","shopper/history.ts","shopper/redux/store.ts","shopper/components/shopping-list/AddButton.tsx","shopper/components/shopping-list/AddButtonContainer.tsx","shopper/components/item-list/AddButton.tsx","shopper/components/item-list/AddButtonContainer.tsx","shopper/components/common/Menu.tsx","shopper/components/google-sheets/SheetControl.tsx","shopper/components/app-bar/AppBar.tsx","shopper/components/app-bar/AppBarContainer.tsx","version.ts","shopper/components/common/ContextMenu.tsx","shopper/components/common/List.tsx","shopper/components/shopping-list/ListContainer.tsx","shopper/components/common/Dialog.tsx","shopper/importer.ts","shopper/components/shopping-list/GenericDialog.tsx","shopper/components/shopping-list/AddDialogContainer.tsx","shopper/components/shopping-list/AddDialog.tsx","shopper/components/common/Select.tsx","shopper/components/item-list/GenericDialog.tsx","shopper/components/item-list/AddDialog.tsx","shopper/components/item-list/AddDialogContainer.tsx","shopper/components/shopping-list/EditDialogContainer.tsx","shopper/components/shopping-list/EditDialog.tsx","shopper/components/item-list/EditDialogContainer.tsx","shopper/components/item-list/EditDialog.tsx","shopper/components/google-sheets/SetupDialog.tsx","shopper/components/google-sheets/SetupDialogContainer.tsx","shopper/components/common/Colors.ts","shopper/components/item-list/ListContainer.tsx","shopper/components/Main.tsx","shopper/App.tsx","serviceWorker.ts","index.tsx"],"names":["DialogType","GoogleSheetSchema","type","required","properties","spreadsheetId","minLength","range","clientId","apiKey","ShopperStateSchema","title","selectedList","sortMode","enum","itemClick","categoryMode","categoryColorMapper","patternProperties","additionalProperties","googleSheets","lists","minItems","items","id","name","comment","enabled","category","validate","obj","test","Ajv","allErrors","compile","schema","console","error","JSON","stringify","errors","Error","logger","toast","transition","cssTransition","enter","exit","duration","appendPosition","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","timestamp","Date","now","toString","counter","newId","prefix","newItemId","deserialize","values","internal","headers","normalized","map","row","reduce","accumulator","key","i","undefined","filter","elem","startsWith","list","item","listId","settings","Object","fromEntries","text","parse","value","serialize","state","simplify","simplifierCounter","Map","simplifierMap","simplifyListId","has","get","count","simplerId","set","normalizedLists","normalizedItems","flatMap","Array","from","curr","keys","add","Set","x","h","unshift","validKeys","entries","discoveryDocs","scope","init","isOnline","setSignIn","loaded","setSignInStatus","initClient","a","gapi","client","auth2","getAuthInstance","isSignedIn","listen","log","script","document","createElement","src","onload","load","body","appendChild","loadGApi","batchUpdate","sheets","spreadsheets","valueInputOption","data","batchClear","ranges","getValues","response","result","isInBounds","index","array","length","shopperSlice","createSlice","initialState","defaultValue","raw","localStorage","getItem","loadOrDefault","reducers","setDefaultSort","setCategorySort","setAlphabeticSort","toggleItemClick","setTextCategoryMode","setHiddenCategoryMode","setColorCategoryMode","addList","action","payload","push","editList","dialogState","EDIT_LIST","info","deleteList","splice","deleted","listUndo","selectList","deselectList","itemUndo","undoItemDeletion","listIndex","undo","pop","warn","undoListDeletion","addItem","editItem","EDIT_ITEM","newListIndex","itemIndex","moved","deleteItem","toggleItem","openAddListDialog","ADD_LIST","openEditListDialog","openAddItemDialog","ADD_ITEM","openEditItemDialog","openSetupGoogleSheetsDialog","SETUP_GOOGLE_SHEETS","closeDialog","copyToClipboard","navigator","clipboard","writeText","copyItemsToClipboard","join","updateState","assign","setGoogleSheetsLoggedIn","googleSheetsLoggedIn","setGoogleSheetsDetails","actions","reducer","dequeueIfNeeded","isShopperQueued","isListSelected","window","history","back","enqueueIfNeeded","pushState","store","configureStore","sliceActions","importFromClipboard","dispatch","readText","then","catch","importFromGoogleSheets","getState","sheet","copyToGoogleSheet","_","subscribe","shallowClone","setItem","save","isQueued","useStyles","makeStyles","theme","createStyles","button","color","connector","connect","openDialog","props","classes","IconButton","className","edge","aria-label","onClick","React","useState","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","children","Menu","keepMounted","open","Boolean","onClose","actionList","outerIndex","innerIndex","label","selected","MenuItem","Divider","status","setLoginStatus","useEffect","icon","size","root","flexGrow","menuButton","rightButton","display","justifyContent","alignItems","listName","totalItemCount","pendingItemCount","prev","Number","googleSheetsEnabled","itemActions","itemListActions","googleSheetsActions","sortActions","onLine","setIsOnline","addEventListener","AppBar","Toolbar","Typography","variant","anchorPosition","top","y","left","anchorReference","mouse","useRef","time","handleMouseDown","e","current","screenX","handleMouseClick","Math","abs","preventDefault","clickEnabled","onChangeIndex","start","onDelete","setState","handleOpenContextMenu","clientX","clientY","Wrapper","forwardRef","ref","ContextMenu","List","component","enterAnimation","leaveAnimation","arrayIndex","panels","ListItem","enabledItem","disabledItem","style","backgroundColor","extractColor","onContextMenu","onMouseDown","ListItemText","primary","secondary","rightPanel","swipeRight","leftPanel","startIndex","paddingBottom","enableMouseEvents","height","direction","marginRight","marginLeft","palette","background","default","flex","flexDirection","overflowY","overflowX","minHeight","userSelect","textDecoration","opacity","grey","dispatchToProps","onEdit","useDispatch","commit","onOpen","Dialog","fullScreen","isOpen","onEnter","DialogTitle","DialogContent","DialogContentText","description","DialogActions","another","Button","disabled","isValid","cancel","ok","regex","notNull","importText","rawText","split","txt","trim","match","newValue","initialCheck","isValidCheck","setValidCheck","tmpValue","setTmpValue","includeClipboard","setIncludeClipboard","target","checked","allowedImport","defaultFocus","focus","onCommit","descriptionText","okText","anotherText","cancelText","TextField","inputRef","input","margin","onChange","fullWidth","InputLabelProps","shrink","isEdit","FormControlLabel","control","Checkbox","Select","marginTop","InputLabel","htmlFor","NativeSelect","selectedIndex","choices","choice","tmpList","setTmpList","showText","setShowText","noCategories","categories","notInCategoryList","indexOf","showDialogText","placeholder","handleCategoryIndexChange","autoFocus","listOptions","initialValue","extractCategories","forEach","helperText","marginBottom","setSpreadsheetId","setRange","setClientId","setApiKey","validApiKey","validClientId","validRange","validSpreadsheetId","password","encrypted","configFile","decrypted","CryptoJS","AES","decrypt","enc","Utf8","ajv","slice","COLORS","defaultSorter","b","alphabeticSorter","defaultResult","aName","bName","localeCompare","categorySorter","aCategory","bCategory","toggleClick","sorter","buildMapper","sort","flexFlow","Notifier","createMuiTheme","MuiButtonBase","disableRipple","transitions","create","app","overflow","ThemeProvider","isLocalhost","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","App","getElementById","param","URL","href","searchParams","isDebug","ready","unregister","message","process","origin","fetch","contentType","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38bd0af3.chunk.js","sourcesContent":["import { ThunkAction, Action } from '@reduxjs/toolkit';\n\nconst SORT_MODES = ['default', 'categories', 'alphabetic'] as const;\nexport type SortMode = typeof SORT_MODES[number];\n\nexport type ItemClickMode = boolean;\n\nconst CATEGORY_MODES = ['text', 'color', 'hidden'] as const;\nexport type CategoryMode = typeof CATEGORY_MODES[number];\n\nexport interface Category {\n  name: string;\n}\n\nexport interface Item {\n  id: string;\n  name: string;\n  comment: string;\n  enabled: boolean;\n  category?: string;\n}\n\nexport type SimpleItem = Omit<Item, 'enabled' | 'id'>;\n\nconst ItemSchema = {\n  type: 'object',\n  required: ['id', 'name', 'enabled'],\n  properties: {\n    id: {\n      type: 'string',\n      minLength: 1,\n    },\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    comment: {\n      type: 'string',\n    },\n    enabled: {\n      type: 'boolean',\n    },\n    category: {\n      type: 'string',\n      minLength: 1,\n    },\n  },\n};\n\nexport interface List {\n  id: string;\n  name: string;\n  items: Item[];\n}\n\nconst ListSchema = {\n  type: 'object',\n  required: ['id', 'name', 'items'],\n  properties: {\n    id: {\n      type: 'string',\n      minLength: 1,\n    },\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    items: {\n      type: 'array',\n      minItems: 0,\n      items: ItemSchema,\n    },\n  },\n};\n\nexport const GoogleSheetSchema = {\n  type: 'object',\n  required: ['spreadsheetId', 'range', 'clientId', 'apiKey'],\n  properties: {\n    spreadsheetId: {\n      type: 'string',\n      minLength: 1,\n    },\n    range: {\n      type: 'string',\n      minLength: 1,\n    },\n    clientId: {\n      type: 'string',\n      minLength: 1,\n    },\n    apiKey: {\n      type: 'string',\n      minLength: 1,\n    },\n  },\n};\n\nexport interface ShopperState {\n  selectedList?: number;\n  sortMode: SortMode;\n  itemClick: ItemClickMode;\n  categoryMode: CategoryMode;\n  categoryColorMapper?: {\n    [category: string]: string;\n  };\n  lists: List[];\n  googleSheets?: {\n    spreadsheetId: string;\n    range: string;\n    clientId: string;\n    apiKey: string;\n  };\n  // not in schema\n  dialogState?: DialogState;\n  listUndo?: List[];\n  itemUndo?: Item[];\n  googleSheetsLoggedIn?: boolean;\n}\n\nexport const ShopperStateSchema = {\n  title: 'ShopperState',\n  type: 'object',\n  properties: {\n    selectedList: {\n      type: 'number',\n    },\n    sortMode: { type: 'string', enum: SORT_MODES },\n    itemClick: { type: 'boolean' },\n    categoryMode: { type: 'string', enum: CATEGORY_MODES },\n    categoryColorMapper: {\n      type: 'object',\n      patternProperties: {\n        // any key must be a string\n        '^.*$': {\n          type: 'string',\n        },\n      },\n      additionalProperties: false,\n    },\n    googleSheets: GoogleSheetSchema,\n    lists: {\n      type: 'array',\n      minItems: 0,\n      items: ListSchema,\n    },\n  },\n  additionalProperties: false,\n  required: ['lists', 'categoryMode', 'sortMode'],\n};\n\n// not in schema\nexport enum DialogType {\n  ADD_LIST,\n  EDIT_LIST,\n  ADD_ITEM,\n  EDIT_ITEM,\n  SETUP_GOOGLE_SHEETS,\n}\n\nexport interface AddListDialog {\n  type: DialogType.ADD_LIST;\n}\nexport interface AddItemDialog {\n  type: DialogType.ADD_ITEM;\n}\n\nexport interface EditListDialog {\n  type: DialogType.EDIT_LIST;\n  index: number;\n}\n\nexport interface EditItemDialog {\n  type: DialogType.EDIT_ITEM;\n  index: number;\n}\nexport interface SetupGoogleSheetsDialog {\n  type: DialogType.SETUP_GOOGLE_SHEETS;\n}\n\nexport type DialogState =\n  | SetupGoogleSheetsDialog\n  | AddListDialog\n  | AddItemDialog\n  | EditListDialog\n  | EditItemDialog;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  ShopperState,\n  unknown,\n  Action<string>\n>;\n","import Ajv from 'ajv';\n\nimport type { ShopperState } from './state';\nimport { ShopperStateSchema as schema } from './state';\n\nconst key = 'shopper-state';\n\nexport function validate(obj: unknown): ShopperState {\n  const ajv = new Ajv({ allErrors: true });\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return obj as ShopperState;\n  }\n  console.error(`Existing state object:\n${JSON.stringify(obj, null, 2)}\nFailed validation:\n${JSON.stringify(test.errors, null, 2)}`);\n\n  throw Error('Invalid object');\n}\n\nexport function load(defaultValue: ShopperState): ShopperState {\n  const raw = localStorage.getItem(key);\n  if (raw === null) {\n    return defaultValue;\n  }\n  const object = JSON.parse(raw);\n  return validate(object);\n}\n\nexport function save(state: ShopperState) {\n  const shallowClone = {\n    ...state,\n    // ensure not saved\n    dialogState: undefined,\n    listUndo: undefined,\n    itemUndo: undefined,\n    googleSheetsLoggedIn: undefined,\n  };\n  localStorage.setItem(key, JSON.stringify(shallowClone));\n}\n","import React from 'react';\nimport { ToastContainer, cssTransition, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const logger = toast;\n\nexport default function () {\n  // copied from Slide to change durations\n  // https://github.com/fkhadra/react-toastify/blob/da5fab4006456434d7ad29360aa702d2c725a9a1/src/components/Transitions.tsx\n  const transition = cssTransition({\n    enter: `Toastify__slide-enter`,\n    exit: `Toastify__slide-exit`,\n    duration: [200, 200],\n    appendPosition: true,\n  });\n\n  // TODO: more customization?\n  // https://github.com/fkhadra/react-toastify/issues/455\n\n  return (\n    <ToastContainer\n      transition={transition}\n      position=\"bottom-left\"\n      autoClose={2000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      closeOnClick={false}\n      rtl={false}\n      pauseOnFocusLoss={false}\n      draggable={false}\n      pauseOnHover={false}\n    />\n  );\n}\n","const timestamp = Date.now().toString(36);\nlet counter = 0;\n\nexport default function newId(prefix: string) {\n  return `${prefix}(${timestamp}:${counter++})`;\n}\n\nexport const LIST_ID_PREFIX = 'list-id';\nexport const ITEM_ID_PREFIX = 'item-id';\n\nexport const newListId = () => newId(LIST_ID_PREFIX);\nexport const newItemId = () => newId(ITEM_ID_PREFIX);\n","import { ITEM_ID_PREFIX, LIST_ID_PREFIX } from '../../redux/id';\nimport { validate } from '../../redux/localStorage';\nimport { ShopperState } from '../../redux/state';\n\nexport function deserialize(values: string[][]): ShopperState {\n  const [internal, headers, ...others] = values;\n  const normalized = others.map((row: string[]) =>\n    headers.reduce((accumulator: any, key: string, i: number) => {\n      if (row[i] !== undefined && row[i] !== '') {\n        accumulator[key] = row[i];\n        // special parsing for boolean entry\n        if (key === 'enabled') {\n          accumulator[key] = accumulator[key] === 'true';\n        }\n      }\n      return accumulator;\n    }, {})\n  );\n  const lists = normalized\n    .filter(elem => elem.id.startsWith(LIST_ID_PREFIX))\n    .map(list => {\n      list.items = normalized\n        .filter(\n          item => item.id.startsWith(ITEM_ID_PREFIX) && item.listId === list.id\n        )\n        .map(item => {\n          delete item.listId;\n          return item;\n        });\n      return list;\n    });\n\n  const settings = Object.fromEntries(\n    internal.map(text => JSON.parse(text)).map(({ key, value }) => [key, value])\n  );\n\n  return validate({\n    lists,\n    ...settings,\n  });\n}\n\nexport function serialize(state: ShopperState, simplify: boolean): string[][] {\n  const simplifierCounter = new Map<string, number>();\n  const simplifierMap = new Map<string, string>();\n  const simplifyListId = simplify\n    ? (id: string, prefix: string) => {\n        if (simplifierMap.has(id)) {\n          return simplifierMap.get(id);\n        }\n        const count = (simplifierCounter.get(prefix) ?? 0) + 1;\n        const simplerId = `${prefix}-${count}`;\n        simplifierCounter.set(prefix, count);\n        simplifierMap.set(id, simplerId);\n        return simplerId;\n      }\n    : (id: string) => id;\n\n  const normalizedLists = state.lists.map(list => ({\n    id: simplifyListId(list.id, LIST_ID_PREFIX),\n    name: list.name,\n  }));\n\n  const normalizedItems = state.lists.flatMap(list =>\n    list.items.map(item => ({\n      listId: simplifyListId(list.id, LIST_ID_PREFIX),\n      ...item,\n      id: simplifyListId(item.id, ITEM_ID_PREFIX),\n    }))\n  );\n\n  const normalized = [...normalizedLists, ...normalizedItems];\n\n  // collect all headers\n  const headers = Array.from(\n    normalized.reduce((set, curr) => {\n      Object.keys(curr).map(key => set.add(key));\n      return set;\n    }, new Set<string>())\n  );\n\n  // leave empty for undefined\n  const values = normalized.map((x: any) =>\n    headers.map(h => (x[h] === undefined ? '' : `${x[h]}`))\n  );\n\n  values.unshift(headers);\n\n  const validKeys = new Set([\n    'sortMode',\n    'itemClick',\n    'categoryMode',\n    'categoryColorMapper',\n  ]);\n\n  const settings = Object.entries(state)\n    // don't handle .lists as settings since we already serialized it\n    .filter(([key, _value]) => validKeys.has(key))\n    .map(([key, value]) => JSON.stringify({ key, value }));\n\n  values.unshift(settings);\n\n  return values;\n}\n","/* global gapi */\n\nimport { deserialize } from './gsheets-serde';\n\n// Array of API discovery doc URLs for APIs\nconst discoveryDocs = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4',\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n// https://developers.google.com/sheets/api/guides/authorizing\nconst scope = 'https://www.googleapis.com/auth/spreadsheets';\n\nexport function init(\n  apiKey: string | undefined,\n  clientId: string | undefined,\n  isOnline: boolean,\n  setSignIn: (isSignedIn: boolean) => void\n) {\n  if (\n    isOnline &&\n    apiKey !== undefined &&\n    clientId !== undefined &&\n    !init.loaded\n  ) {\n    init.loaded = true;\n    loadGApi(apiKey, clientId, setSignIn);\n  }\n}\ninit.loaded = false;\n\nexport function loadGApi(\n  apiKey: string,\n  clientId: string,\n  setSignInStatus: (status: boolean) => void\n) {\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  }\n\n  async function initClient() {\n    try {\n      await gapi.client.init({\n        apiKey,\n        clientId,\n        discoveryDocs,\n        scope,\n      });\n\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(setSignInStatus);\n\n      // Handle the initial sign-in state.\n      setSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    } catch (error) {\n      console.log(JSON.stringify(error, null, 2));\n      setSignInStatus(false);\n    }\n  }\n\n  const script = document.createElement('script');\n  script.src = 'https://apis.google.com/js/client.js';\n  script.onload = () => handleClientLoad();\n  document.body.appendChild(script);\n}\n\nexport function handleSignIn() {\n  gapi.auth2.getAuthInstance().signIn();\n}\n\nexport function handleSignOut() {\n  gapi.auth2.getAuthInstance().signOut();\n}\n\nexport async function getSpreadsheetTitle(spreadsheetId: string) {\n  const response = await gapi.client.sheets.spreadsheets.get({\n    spreadsheetId,\n  });\n  return String(response.result.properties.title);\n}\n\nexport async function batchUpdate(\n  spreadsheetId: string,\n  range: string,\n  values: string[][]\n) {\n  try {\n    return await gapi.client.sheets.spreadsheets.values.batchUpdate(\n      {\n        spreadsheetId,\n      },\n      {\n        // valueInputOption: 'USER_ENTERED',\n        valueInputOption: 'RAW',\n        data: {\n          range,\n          values,\n        },\n      }\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/batchClear\nexport async function batchClear(spreadsheetId: string, range: string) {\n  return await gapi.client.sheets.spreadsheets.values.batchClear(\n    {\n      spreadsheetId,\n    },\n    {\n      ranges: range,\n    }\n  );\n}\n\nexport async function getValues(spreadsheetId: string, range: string) {\n  const response = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    range,\n  });\n\n  return deserialize(response.result.values);\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ShopperState, DialogType, AppThunk } from './state';\nimport { load, validate } from './localStorage';\nimport { logger } from '../components/common/Notifier';\nimport { newListId, newItemId } from './id';\nimport { serialize } from '../components/google-sheets/gsheets-serde';\nimport {\n  batchClear,\n  batchUpdate,\n  getValues,\n} from '../components/google-sheets/spreadsheet';\n\nfunction loadOrDefault(): ShopperState {\n  const defaultValue: ShopperState = {\n    selectedList: undefined,\n    sortMode: 'default',\n    itemClick: false,\n    categoryMode: 'text',\n    lists: [],\n  };\n\n  try {\n    return load(defaultValue);\n  } catch (error) {\n    logger.error(`Failed to load local state: ${error}`);\n  }\n  return defaultValue;\n}\n\nconst isInBounds = <T>(index: number, array: T[]) =>\n  index >= 0 && index < array.length;\n\nexport const shopperSlice = createSlice({\n  name: 'shopper',\n  initialState: loadOrDefault(),\n  reducers: {\n    // sort\n    setDefaultSort: state => {\n      state.sortMode = 'default';\n    },\n    setCategorySort: state => {\n      state.sortMode = 'categories';\n    },\n    setAlphabeticSort: state => {\n      state.sortMode = 'alphabetic';\n    },\n    // item click\n    toggleItemClick: state => {\n      state.itemClick = !state.itemClick;\n    },\n    // category\n    setTextCategoryMode: state => {\n      state.categoryMode = 'text';\n    },\n    setHiddenCategoryMode: state => {\n      state.categoryMode = 'hidden';\n    },\n    setColorCategoryMode: state => {\n      state.categoryMode = 'color';\n    },\n    // list\n    addList: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        items: { name: string; comment: string }[];\n      }>\n    ) => {\n      const { name, items } = action.payload;\n      state.lists.push({\n        id: newListId(),\n        name,\n        items: items.map(({ name, comment }) => ({\n          id: newItemId(),\n          name,\n          comment,\n          enabled: true,\n        })),\n      });\n    },\n    editList: (state, action: PayloadAction<string>) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_LIST) {\n        const { index } = dialogState;\n        const name = action.payload;\n        if (isInBounds(index, state.lists)) {\n          state.lists[index].name = name;\n          logger.info('List updated');\n        }\n      }\n    },\n    deleteList: (state, action: PayloadAction<number>) => {\n      const index = action.payload;\n      if (isInBounds(index, state.lists)) {\n        const [deleted] = state.lists.splice(index, 1);\n\n        if (state.listUndo === undefined) {\n          state.listUndo = [];\n        }\n        state.listUndo.push(deleted);\n\n        logger.info(`List \"${deleted.name}\" deleted`);\n      }\n    },\n    selectList: (state, action: PayloadAction<number>) => {\n      state.selectedList = action.payload;\n    },\n    deselectList: state => {\n      state.selectedList = undefined;\n      state.itemUndo = undefined;\n    },\n    // undo\n    undoItemDeletion: state => {\n      const listIndex = state.selectedList;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        state.itemUndo !== undefined &&\n        state.itemUndo.length > 0\n      ) {\n        const undo = state.itemUndo.pop();\n        if (undo !== undefined) {\n          state.lists[listIndex].items.push(undo);\n          logger.info('Item restored');\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    undoListDeletion: state => {\n      if (state.listUndo !== undefined && state.listUndo.length > 0) {\n        const undo = state.listUndo.pop();\n        if (undo !== undefined) {\n          state.lists.push(undo);\n          logger.info(`List \"${undo.name}\" restored`);\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    // item\n    addItem: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        comment: string;\n        category?: string;\n      }>\n    ) => {\n      const { name, comment, category } = action.payload;\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        state.lists[listIndex].items.push({\n          id: newItemId(),\n          name,\n          comment,\n          enabled: true,\n          category,\n        });\n      }\n    },\n    editItem: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        comment: string;\n        listIndex?: number;\n        category?: string;\n      }>\n    ) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_ITEM) {\n        const { index } = dialogState;\n        const {\n          name,\n          comment,\n          listIndex: newListIndex,\n          category,\n        } = action.payload;\n\n        const listIndex = state.selectedList;\n        const itemIndex = index;\n        if (\n          listIndex !== undefined &&\n          isInBounds(listIndex, state.lists) &&\n          isInBounds(itemIndex, state.lists[listIndex].items)\n        ) {\n          const item = state.lists[listIndex].items[itemIndex];\n          item.name = name;\n          item.comment = comment;\n          item.category = category;\n\n          if (\n            newListIndex !== undefined &&\n            listIndex !== newListIndex &&\n            isInBounds(newListIndex, state.lists)\n          ) {\n            const [moved] = state.lists[listIndex].items.splice(itemIndex, 1);\n            state.lists[newListIndex].items.push(moved);\n            logger.info('Item moved');\n          } else {\n            logger.info('Item updated');\n          }\n        }\n      }\n    },\n    deleteItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const [deleted] = state.lists[listIndex].items.splice(itemIndex, 1);\n\n        if (state.itemUndo === undefined) {\n          state.itemUndo = [];\n        }\n        state.itemUndo.push(deleted);\n\n        logger.info('Item deleted');\n      }\n    },\n    toggleItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const item = state.lists[listIndex].items[itemIndex];\n        item.enabled = !item.enabled;\n      }\n    },\n    // dialog\n    openAddListDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_LIST,\n      };\n    },\n    openEditListDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_LIST,\n        index: action.payload,\n      };\n    },\n    openAddItemDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_ITEM,\n      };\n    },\n    openEditItemDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_ITEM,\n        index: action.payload,\n      };\n    },\n    openSetupGoogleSheetsDialog: state => {\n      state.dialogState = {\n        type: DialogType.SETUP_GOOGLE_SHEETS,\n      };\n    },\n    closeDialog: state => {\n      state.dialogState = undefined;\n    },\n    copyToClipboard: state => {\n      if (navigator?.clipboard?.writeText) {\n        navigator.clipboard.writeText(JSON.stringify(state));\n        logger.info('Copied to clipboard');\n      } else {\n        logger.error('ERROR: denied use of browser clipboard');\n      }\n    },\n    copyItemsToClipboard: state => {\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        if (navigator?.clipboard?.writeText) {\n          const items = state.lists[listIndex].items;\n          const text = items\n            .map(({ name, comment }) => `${name} ${comment}`)\n            .join('\\n');\n          navigator.clipboard.writeText(text);\n          logger.info(`Copied ${items.length} items to clipboard`);\n        } else {\n          logger.error('ERROR: denied use of browser clipboard');\n        }\n      }\n    },\n    updateState: (state, action: PayloadAction<ShopperState>) => {\n      state.selectedList = undefined;\n      state.categoryColorMapper = undefined;\n      Object.assign(state, action.payload);\n    },\n    // set sign in\n    setGoogleSheetsLoggedIn: (state, action: PayloadAction<boolean>) => {\n      state.googleSheetsLoggedIn = action.payload;\n    },\n    setGoogleSheetsDetails: (\n      state,\n      action: PayloadAction<ShopperState['googleSheets']>\n    ) => {\n      state.googleSheets = action.payload;\n    },\n  },\n});\n\nexport const copyToGoogleSheet = (): AppThunk => async (_, getState) => {\n  try {\n    const state = getState();\n    if (state.googleSheets === undefined) {\n      logger.error('Missing google sheets info');\n      return;\n    }\n    const values = serialize(state, true);\n    const spreadsheetId = state.googleSheets.spreadsheetId;\n    const sheet = state.googleSheets.range;\n    // clear is necessary to ensure any old value is removed\n    await batchClear(spreadsheetId, sheet);\n    await batchUpdate(spreadsheetId, sheet, values);\n    logger.info('Copied to google sheet');\n  } catch (error) {\n    console.log(error);\n    logger.error(`ERROR: ${error}`);\n  }\n};\n\nexport const importFromGoogleSheets =\n  (): AppThunk => async (dispatch, getState) => {\n    try {\n      const state = getState();\n      if (state.googleSheets === undefined) {\n        logger.error('Missing google sheets info');\n        return;\n      }\n      const spreadsheetId = state.googleSheets.spreadsheetId;\n      const sheet = state.googleSheets.range;\n      const values = await getValues(spreadsheetId, sheet);\n      dispatch(actions.updateState(values));\n      logger.info('Imported from google sheet');\n    } catch (error) {\n      console.log(error);\n      logger.error(`ERROR: ${error}`);\n    }\n  };\n\nexport const importFromClipboard = (): AppThunk => dispatch => {\n  if (navigator?.clipboard?.readText) {\n    navigator.clipboard\n      .readText()\n      .then(value => {\n        const obj = JSON.parse(value);\n        const state = validate(obj);\n        dispatch(actions.updateState(state));\n        logger.info('Imported from clipboard');\n      })\n      .catch(error => {\n        console.log(error);\n        logger.error(`ERROR: ${error}`);\n      });\n  } else {\n    logger.error('ERROR: denied use of browser clipboard');\n  }\n};\n\nexport const { actions, reducer } = shopperSlice;\n","function dequeueIfNeeded(isShopperQueued: boolean, isListSelected: boolean) {\n  if (isShopperQueued && !isListSelected) {\n    window.history.back();\n  }\n}\n\nfunction enqueueIfNeeded(isShopperQueued: boolean, isListSelected: boolean) {\n  if (!isShopperQueued && isListSelected) {\n    window.history.pushState({ isShopperQueued: true }, 'shopper');\n  }\n}\n\nfunction isShopperQueued() {\n  return window.history.state?.isShopperQueued === true;\n}\n\nexport { dequeueIfNeeded, enqueueIfNeeded, isShopperQueued };\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  reducer,\n  actions as sliceActions,\n  importFromClipboard,\n  importFromGoogleSheets,\n  copyToGoogleSheet,\n} from './slice';\nimport { save } from './localStorage';\nimport { enqueueIfNeeded, dequeueIfNeeded, isShopperQueued } from '../history';\n\nexport const store = configureStore({ reducer });\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const actions = {\n  ...sliceActions,\n  importFromClipboard,\n  importFromGoogleSheets,\n  copyToGoogleSheet,\n};\n\n// auto-save\nstore.subscribe(() => {\n  const state = store.getState();\n  save(state);\n  // console.log(JSON.stringify(state));\n\n  const isQueued = isShopperQueued();\n  const isListSelected = state.selectedList !== undefined;\n\n  enqueueIfNeeded(isQueued, isListSelected);\n  dequeueIfNeeded(isQueued, isListSelected);\n});\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add list\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddListDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add item\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddItemDialog(),\n});\n\nexport default connector(Component);\n","import React, { ReactNode } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  children: ReactNode;\n  actions: {\n    label: string;\n    action: () => void;\n    selected?: boolean;\n  }[][];\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        className={classes.button}\n        aria-controls=\"simple-menu\"\n        edge=\"end\"\n        aria-label=\"menu\"\n        color=\"secondary\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {props.children}\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.actions.flatMap((actionList, outerIndex) => {\n          const result = actionList.map(\n            ({ label, action, selected }, innerIndex) => (\n              <MenuItem\n                key={`outer=${outerIndex}-inner${innerIndex}`}\n                onClick={() => {\n                  handleClose();\n                  action();\n                }}\n                selected={!!selected}\n              >\n                {label}\n              </MenuItem>\n            )\n          );\n          // add separator if adding a new set of actions\n          if (outerIndex !== 0) {\n            result.unshift(<Divider key={`divider-${outerIndex}`} />);\n          }\n          return result;\n        })}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport type { RootState } from '../../redux/store';\nimport { actions } from '../../redux/store';\nimport { init } from './spreadsheet';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\n// status icons\nimport NotAvailable from '@material-ui/icons/CloudOff';\nimport Available from '@material-ui/icons/CloudDone';\nimport Pending from '@material-ui/core/CircularProgress';\n\ntype SheetControlProps = {\n  clientId?: string;\n  apiKey?: string;\n  // login status\n  status?: boolean;\n  setLoginStatus: (status: boolean) => void;\n  openDialog: () => void;\n  isOnline: boolean;\n};\n\nfunction SheetControl(props: SheetControlProps) {\n  const classes = useStyles();\n\n  React.useEffect(\n    () =>\n      init(props.apiKey, props.clientId, props.isOnline, props.setLoginStatus),\n    [props.apiKey, props.clientId, props.setLoginStatus, props.isOnline]\n  );\n\n  const icon =\n    props.apiKey === undefined ||\n    props.clientId === undefined ||\n    props.status === false ||\n    props.isOnline === false ? (\n      <NotAvailable />\n    ) : props.status === true ? (\n      <Available />\n    ) : (\n      <Pending color=\"inherit\" size={30} />\n    );\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Google Sheets API Access Status\"\n      color=\"secondary\"\n      aria-label=\"google-sheets\"\n      onClick={() => props.openDialog()}\n    >\n      {icon}\n    </IconButton>\n  );\n}\n\nexport const mapStateToProps = (state: RootState) => {\n  return {\n    clientId: state.googleSheets?.clientId,\n    apiKey: state.googleSheets?.apiKey,\n    status: state.googleSheetsLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLoginStatus: (status: boolean) => actions.setGoogleSheetsLoggedIn(status),\n  openDialog: () => actions.openSetupGoogleSheetsDialog(),\n})(SheetControl);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/ArrowBackRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddList from '../shopping-list/AddButtonContainer';\nimport AddItem from '../item-list/AddButtonContainer';\nimport Menu from '../common/Menu';\nimport ActionsMenuIcon from '@material-ui/icons/MoreVert';\nimport SortMenuIcon from '@material-ui/icons/Sort';\nimport {\n  enqueueIfNeeded,\n  dequeueIfNeeded,\n  isShopperQueued,\n} from '../../history';\n\nimport version from '../../../version';\nimport { toast } from 'react-toastify';\nimport { SortMode, CategoryMode } from '../../redux/state';\nimport SheetControl from '../google-sheets/SheetControl';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 0,\n    },\n    title: {\n      flexGrow: 0,\n    },\n    menuButton: {\n      flexGrow: 0,\n    },\n    rightButton: {\n      // flexDirection: 'row',\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      // border: '1px solid blue',\n    },\n  })\n);\n\ninterface Props {\n  selectedList?: {\n    listName: string;\n    pendingItemCount: number;\n    totalItemCount: number;\n  };\n  googleSheetsEnabled: boolean;\n  sortMode: SortMode;\n  categoryMode: CategoryMode;\n  itemClick: boolean;\n  deselectList: () => void;\n  copyItemsToClipboard: () => void;\n  toggleItemClick: () => void;\n  copyToClipboard: () => void;\n  copyToGoogleSheet: () => void;\n  importFromGoogleSheets: () => void;\n  importFromClipboard: () => void;\n  undoItemDeletion: () => void;\n  undoListDeletion: () => void;\n  // sort\n  setDefaultSort: () => void;\n  setCategorySort: () => void;\n  setAlphabeticSort: () => void;\n  // categories\n  setTextCategoryMode: () => void;\n  setHiddenCategoryMode: () => void;\n  setColorCategoryMode: () => void;\n}\n\nconst shopperTitle = 'Shopper';\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n\n  let title = shopperTitle;\n  if (props.selectedList) {\n    const { listName, pendingItemCount, totalItemCount } = props.selectedList;\n    title = listName!;\n    if (totalItemCount! > 0) {\n      title = `(${pendingItemCount}) ${title}`;\n    }\n  }\n\n  const itemActions = [\n    {\n      label: 'copy list items to clipboard',\n      action: () => props.copyItemsToClipboard(),\n    },\n  ];\n\n  const itemListActions = [\n    {\n      label: `${props.itemClick ? 'disable' : 'enable'} item click`,\n      action: () => props.toggleItemClick(),\n    },\n  ];\n\n  const defaultActions = [\n    {\n      label: 'import state from clipboard',\n      action: () => props.importFromClipboard(),\n    },\n    {\n      label: 'copy state to clipboard',\n      action: () => props.copyToClipboard(),\n    },\n  ];\n\n  const googleSheetsActions = [\n    {\n      label: 'import from google sheet',\n      action: () => props.importFromGoogleSheets(),\n    },\n    {\n      label: 'export to google sheet',\n      action: () => props.copyToGoogleSheet(),\n    },\n  ];\n\n  const contextActions = [\n    {\n      label: `undo ${props.selectedList ? 'item' : 'list'} deletion`,\n      action: () =>\n        props.selectedList\n          ? props.undoItemDeletion()\n          : props.undoListDeletion(),\n    },\n  ];\n\n  const actions = [defaultActions, contextActions];\n  if (props.googleSheetsEnabled) {\n    actions.unshift(googleSheetsActions);\n  }\n  if (props.selectedList) {\n    actions.unshift(itemListActions);\n    actions.unshift(itemActions);\n  }\n\n  const sortActions = [\n    [\n      {\n        label: 'default sort',\n        action: () => props.setDefaultSort(),\n        selected: props.sortMode === 'default',\n      },\n      {\n        label: 'category sort',\n        action: () => props.setCategorySort(),\n        selected: props.sortMode === 'categories',\n      },\n      {\n        label: 'alphabetic sort',\n        action: () => props.setAlphabeticSort(),\n        selected: props.sortMode === 'alphabetic',\n      },\n    ],\n    [\n      {\n        label: 'hidden category',\n        action: () => props.setHiddenCategoryMode(),\n        selected: props.categoryMode === 'hidden',\n      },\n      {\n        label: 'text category',\n        action: () => props.setTextCategoryMode(),\n        selected: props.categoryMode === 'text',\n      },\n      {\n        label: 'color category',\n        action: () => props.setColorCategoryMode(),\n        selected: props.categoryMode === 'color',\n      },\n    ],\n  ];\n\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n  window.addEventListener('online', () => setIsOnline(true));\n  window.addEventListener('offline', () => setIsOnline(false));\n\n  React.useEffect(() => {\n    const isQueued = isShopperQueued();\n    const isListSelected = props.selectedList !== undefined;\n\n    enqueueIfNeeded(isQueued, isListSelected);\n    dequeueIfNeeded(isQueued, isListSelected);\n\n    window.addEventListener('popstate', () => {\n      props.deselectList();\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.selectedList && (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => props.deselectList()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => {\n              if (title === shopperTitle) {\n                toast.info(version);\n              }\n            }}\n          >\n            {title}\n          </Typography>\n          <SheetControl isOnline={isOnline} />\n\n          <div className={classes.rightButton}>\n            {props.selectedList ? <AddItem /> : <AddList />}\n          </div>\n          {props.selectedList && (\n            <Menu actions={sortActions}>\n              <SortMenuIcon />\n            </Menu>\n          )}\n          <Menu actions={actions}>\n            <ActionsMenuIcon />\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport type { RootState } from '../../redux/store';\nimport { actions } from '../../redux/store';\nimport Component from './AppBar';\n\nexport const mapStateToProps = (state: RootState) => {\n  if (state.selectedList !== undefined) {\n    const list = state.lists[state.selectedList!];\n    const listName = list.name;\n    const totalItemCount = list.items.length;\n    const pendingItemCount = list.items.reduce(\n      (prev, curr) => prev + Number(!!curr.enabled),\n      0\n    );\n    return {\n      selectedList: {\n        totalItemCount,\n        pendingItemCount,\n        listName,\n      },\n      googleSheetsEnabled: state.googleSheetsLoggedIn === true,\n      sortMode: state.sortMode,\n      categoryMode: state.categoryMode,\n      itemClick: state.itemClick,\n    };\n  }\n\n  return {\n    googleSheetsEnabled: state.googleSheetsLoggedIn === true,\n    selectedList: undefined,\n    sortMode: 'default' as const,\n    categoryMode: 'text' as const,\n    itemClick: false,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  deselectList: () => actions.deselectList(),\n  copyItemsToClipboard: () => actions.copyItemsToClipboard(),\n  copyToClipboard: () => actions.copyToClipboard(),\n  importFromClipboard: () => actions.importFromClipboard(),\n  copyToGoogleSheet: () => actions.copyToGoogleSheet(),\n  importFromGoogleSheets: () => actions.importFromGoogleSheets(),\n  undoItemDeletion: () => actions.undoItemDeletion(),\n  undoListDeletion: () => actions.undoListDeletion(),\n  // sort\n  setDefaultSort: () => actions.setDefaultSort(),\n  setCategorySort: () => actions.setCategorySort(),\n  setAlphabeticSort: () => actions.setAlphabeticSort(),\n  // item click\n  toggleItemClick: () => actions.toggleItemClick(),\n  // category\n  setTextCategoryMode: () => actions.setTextCategoryMode(),\n  setHiddenCategoryMode: () => actions.setHiddenCategoryMode(),\n  setColorCategoryMode: () => actions.setColorCategoryMode(),\n});\n\nexport default connector(Component);\n","export default 'commit: 983b761 (2022-08-13T15:44:45.479Z)';\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  position?: {\n    x: number;\n    y: number;\n    index: number;\n  };\n\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n\n  onClose: () => void;\n}\n\nexport default function (props: Props) {\n  const open = props.position !== undefined;\n  const anchorPosition =\n    props.position !== undefined\n      ? { top: props.position.y, left: props.position.x }\n      : undefined;\n\n  return (\n    <Menu\n      keepMounted\n      open={open}\n      onClose={() => props.onClose()}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={anchorPosition}\n    >\n      {props.actions.flatMap((actionList, outerIndex) => {\n        const result = actionList.map(({ label, action }, innerIndex) => (\n          <MenuItem\n            key={`outer=${outerIndex}-inner${innerIndex}`}\n            onClick={() => {\n              if (props.position) {\n                // store in case of changes\n                const { index } = props.position;\n                props.onClose();\n                if (index !== null) {\n                  action(index);\n                }\n              }\n            }}\n          >\n            {label}\n          </MenuItem>\n        ));\n        // add separator if adding a new set of actions\n        if (outerIndex !== 0) {\n          result.unshift(<Divider key={`divider-${outerIndex}`} />);\n        }\n        return result;\n      })}\n    </Menu>\n  );\n}\n","import React, { forwardRef, ReactNode } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport FlipMove from 'react-flip-move';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ContextMenu from './ContextMenu';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// TODO: update SwipeableViews to remove \"Legacy context API has been detected within a strict-mode tree\" warning. See: https://github.com/oliviertassinari/react-swipeable-views/issues/596\nimport SwipeableViews from 'react-swipeable-views';\nimport { CategoryMode } from '../../redux/state';\n\nexport interface Props {\n  lists: {\n    id: string;\n    name: string;\n    comment: string;\n    enabled?: boolean;\n    category?: string;\n    index: number;\n  }[];\n  onClick: (index: number) => void;\n  onDelete: (index: number) => void;\n  swipeRight: boolean;\n  clickEnabled: boolean;\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n  categoryMode?: CategoryMode;\n  extractColor?: (category: string | undefined) => string | undefined;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  const mouse = React.useRef({ x: 0, time: 0 });\n\n  const handleMouseDown = (e: any) => {\n    mouse.current.x = e.screenX;\n    mouse.current.time = Date.now();\n  };\n\n  const handleMouseClick = (index: number) => (e: React.MouseEvent) => {\n    // some horizontal movement, ignore click\n    const delta = Math.abs(e.screenX - mouse.current.x);\n    if (delta > 10) {\n      e.preventDefault();\n      return;\n    }\n\n    if (props.clickEnabled && e.type === 'click') {\n      props.onClick(index);\n      return;\n    }\n  };\n\n  // on swipe index change\n  const onChangeIndex = (index: number, start: number) => (i: number) => {\n    if (i < start) {\n      props.onClick(index);\n      return;\n    }\n    if (i > start) {\n      props.onDelete(index);\n      return;\n    }\n  };\n\n  const [state, setState] = React.useState<\n    | {\n        x: number;\n        y: number;\n        index: number;\n      }\n    | undefined\n  >(undefined);\n\n  const handleOpenContextMenu =\n    (index: number) => (event: React.MouseEvent<HTMLDivElement>) => {\n      event.preventDefault();\n      setState({\n        x: event.clientX - 4,\n        y: event.clientY - 4,\n        index,\n      });\n    };\n\n  const handleCloseContextMenu = () => {\n    setState(undefined);\n  };\n\n  const Wrapper = forwardRef<HTMLDivElement, { children: ReactNode }>(\n    (props, ref) => <div ref={ref}>{props.children}</div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <ContextMenu\n        position={state}\n        onClose={handleCloseContextMenu}\n        actions={props.actions}\n      />\n      <List component=\"nav\" className={classes.list}>\n        <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\">\n          {props.lists.map(\n            ({ id, name, comment, enabled, index, category }, arrayIndex) => {\n              const panels = [\n                <ListItem\n                  key=\"middle-panel\"\n                  className={\n                    enabled !== false\n                      ? classes.enabledItem\n                      : classes.disabledItem\n                  }\n                  style={{\n                    backgroundColor:\n                      props.categoryMode === 'color' && props.extractColor\n                        ? props.extractColor(category)\n                        : undefined,\n                  }}\n                  button\n                  onContextMenu={handleOpenContextMenu(index)}\n                  onClick={handleMouseClick(index)}\n                  onMouseDown={handleMouseDown}\n                >\n                  <ListItemText primary={name} secondary={comment} />\n                  {category && props.categoryMode === 'text' && (\n                    <div>{category}</div>\n                  )}\n                </ListItem>,\n                rightPanel,\n              ];\n              if (props.swipeRight) {\n                panels.unshift(leftPanel);\n              }\n              const startIndex = props.swipeRight ? 1 : 0;\n              // hack: changes the key value to force new item on enabled/disabled\n              // since otherwise SwipeableViews will remain on swiped panel and\n              // FlipMove will not use the enter/leave animations.\n              const key = `${id}-${enabled}`;\n              const style =\n                props.lists.length - 1 === arrayIndex\n                  ? { paddingBottom: '50px' }\n                  : {};\n              return (\n                <Wrapper key={key}>\n                  <SwipeableViews\n                    style={style}\n                    key={key}\n                    index={startIndex}\n                    enableMouseEvents\n                    onChangeIndex={onChangeIndex(index, startIndex)}\n                  >\n                    {panels}\n                  </SwipeableViews>\n                </Wrapper>\n              );\n            }\n          )}\n        </FlipMove>\n      </List>\n    </div>\n  );\n}\n\nconst leftPanel = (\n  <div\n    key=\"left-panel\"\n    style={{\n      backgroundColor: '#a9f58c',\n      height: '100%',\n      direction: 'rtl',\n    }}\n  >\n    <KeyboardArrowRightIcon\n      style={{ height: '100%', marginRight: '10px', color: 'gray' }}\n    />\n    <DoneIcon style={{ height: '100%', marginRight: '10px' }} />\n  </div>\n);\n\nconst rightPanel = (\n  <div key=\"right-panel\" style={{ backgroundColor: '#ed837b', height: '100%' }}>\n    <KeyboardArrowLeftIcon\n      style={{ height: '100%', marginLeft: '10px', color: 'gray' }}\n    />\n    <DeleteIcon style={{ height: '100%', marginLeft: '10px' }} />\n  </div>\n);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.default,\n      flex: '1',\n      height: '90vh',\n      // border: '1px solid red',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      overflowY: 'scroll',\n      overflowX: 'hidden',\n      // border: '1px solid blue',\n      minHeight: '100%',\n      backgroundColor: theme.palette.background.default,\n    },\n    enabledItem: {\n      backgroundColor: 'white',\n      // marginTop: '2px',\n      // marginBottom: '2px',\n      userSelect: 'none',\n      textDecoration: 'none',\n      opacity: '1',\n    },\n    disabledItem: {\n      backgroundColor: 'white',\n      // marginTop: '2px',\n      // marginBottom: '2px',\n      userSelect: 'none',\n      textDecoration: 'line-through',\n      opacity: '0.5',\n      '&:hover': {\n        textDecoration: 'line-through',\n      },\n    },\n    menuButton: {\n      color: theme.palette.grey[500],\n    },\n  })\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  return {\n    lists: state.lists.map(({ id, name, items }, index) => ({\n      id,\n      name,\n      comment: `${items.length} items`,\n      index,\n    })),\n  };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteList(index),\n  onEdit: (index: number) => actions.openEditListDialog(index),\n  onClick: (index: number) => actions.selectList(index),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight' | 'clickEnabled'> & {\n  onEdit: (index: number) => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={false}\n      clickEnabled={true}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: index => props.onEdit(index),\n          },\n        ],\n        [\n          {\n            label: 'Delete',\n            action: index => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import React, { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/slice';\n\ninterface Props {\n  isOpen: boolean;\n  children: ReactNode | ReactNode[];\n\n  title: string;\n  ok: string;\n  cancel?: string;\n  another?: string;\n\n  description: string;\n  isValid: boolean;\n\n  onClose: (commit: boolean) => void;\n  onOpen: () => void;\n}\n\nexport default function (props: Props) {\n  const dispatch = useDispatch();\n\n  function handleClose(commit: boolean, closeDialog: boolean = true) {\n    props.onClose(commit);\n    if (closeDialog) {\n      dispatch(actions.closeDialog());\n    } else {\n      props.onOpen();\n    }\n  }\n\n  function handleOpen() {\n    props.onOpen();\n  }\n\n  return (\n    <div>\n      <Dialog\n        // full screen dialog works best on mobile\n        fullScreen\n        open={props.isOpen}\n        onEnter={() => handleOpen()}\n        onClose={() => handleClose(false)}\n      >\n        <DialogTitle>{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          {props.children}\n        </DialogContent>\n        <DialogActions>\n          {props.another !== undefined && (\n            <Button\n              onClick={() => handleClose(true, false)}\n              color=\"primary\"\n              disabled={!props.isValid}\n            >\n              {props.another}\n            </Button>\n          )}\n          {props.another !== undefined && <div style={{ flex: '1 0 0' }} />}\n          {props.cancel !== undefined && (\n            <Button onClick={() => handleClose(false)} color=\"primary\">\n              {props.cancel}\n            </Button>\n          )}\n          <Button\n            onClick={() => handleClose(true)}\n            color=\"primary\"\n            disabled={!props.isValid}\n          >\n            {props.ok}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","const regex = /(.*) (\\d+.*)/;\n\nfunction notNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nexport function importText(\n  rawText: string\n): { name: string; comment: string }[] {\n  return rawText\n    .split('\\n')\n    .map(txt => txt.trim())\n    .filter(txt => txt.length > 0)\n    .map(txt => {\n      const match = txt.match(regex);\n      if (!match) {\n        return { name: txt, comment: '' };\n      }\n      const [, name, comment] = match;\n      return { name, comment };\n    })\n    .filter(notNull);\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '../common/Dialog';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { importText } from '../../importer';\n\ninterface Props {\n  value: string;\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  // internal\n  isOpen: boolean;\n  isEdit: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst isValid = (newValue: string) => newValue.trim().length > 0;\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n  const [includeClipboard, setIncludeClipboard] = React.useState<{\n    includeClipboard: boolean;\n    items: { name: string; comment: string }[];\n  }>({\n    includeClipboard: false,\n    items: [],\n  });\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onCommit({\n        name: tmpValue,\n        items: includeClipboard.includeClipboard ? includeClipboard.items : [],\n      });\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n    setIncludeClipboard({ includeClipboard: false, items: [] });\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  async function importFromClipboard() {\n    try {\n      const txt = await navigator.clipboard.readText();\n      return importText(txt);\n    } catch (error) {\n      console.log(`Error importing from clipboard: ${error}`);\n      return [];\n    }\n  }\n\n  async function handleIncludeClipboard(event: any) {\n    const includeClipboard = event.target.checked;\n    const items = includeClipboard ? await importFromClipboard() : [];\n\n    setIncludeClipboard({\n      includeClipboard,\n      items,\n    });\n  }\n\n  const count = includeClipboard.includeClipboard\n    ? `${includeClipboard.items.length} `\n    : ' ';\n  const label = `Include ${count}items from clipboard`;\n  const allowedImport = navigator?.clipboard?.readText !== undefined;\n\n  const defaultFocus = React.useRef<any>(null);\n\n  return (\n    <Dialog\n      isOpen={props.isOpen}\n      isValid={isValidCheck}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      title={props.title}\n      description={props.descriptionText}\n      ok={props.okText}\n      another={props.anotherText}\n      cancel={props.cancelText}\n    >\n      <TextField\n        error={!isValidCheck}\n        inputRef={input => {\n          defaultFocus.current = input;\n        }}\n        margin=\"dense\"\n        label=\"List name\"\n        type=\"text\"\n        onChange={handleChange}\n        fullWidth\n        value={tmpValue}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      {!props.isEdit && allowedImport && (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={includeClipboard.includeClipboard}\n              onChange={handleIncludeClipboard}\n              color=\"primary\"\n            />\n          }\n          label={label}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_LIST,\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => value && actions.addList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst initialValue = '';\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={initialValue}\n      title=\"Create List\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      isEdit={false}\n      descriptionText=\"Pick the name for your new list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\ninterface SelectProps {\n  title: string;\n  choices: string[];\n  value: string | undefined;\n  onChange: (value: number) => void;\n}\n\nexport default function Select(props: SelectProps) {\n  return (\n    <div style={{ marginTop: 10 }}>\n      <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n        {props.title}\n      </InputLabel>\n      <NativeSelect\n        fullWidth\n        value={props.value}\n        onChange={event => props.onChange(event.target.selectedIndex)}\n      >\n        {props.choices.map((choice, index) => {\n          return (\n            <option value={choice} key={index}>\n              {choice}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </div>\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '../common/Dialog';\nimport Select from '../common/Select';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  listOptions?: string[];\n  categories: string[];\n  selectedList?: number;\n  // ...\n  isOpen: boolean;\n  value: { name: string; comment: string; category?: string };\n  onCommit: (value: {\n    name: string;\n    comment: string;\n    listIndex?: number;\n    category?: string;\n  }) => void;\n}\n\nconst isValid = ({ name, category }: Item) => ({\n  name: name.trim().length > 0,\n  // these are always valid\n  comment: true,\n  category: true,\n});\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState({\n    ...props.value,\n    category: props.value.category || '',\n  });\n  const [tmpList, setTmpList] = React.useState(props.selectedList);\n  const [showText, setShowText] = React.useState(false);\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      const { category } = tmpValue;\n      props.onCommit({\n        ...tmpValue,\n        category: category.trim().length <= 0 ? undefined : category,\n        listIndex: tmpList,\n      });\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue({ ...props.value, category: props.value.category || '' });\n    setValidCheck(isValid(props.value));\n    setTmpList(props.selectedList);\n    setShowText(false);\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleNameChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      name: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleCommentChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      comment: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleListChange(index: number) {\n    setTmpList(index);\n  }\n\n  function handleCategoryIndexChange(index: number) {\n    if (index === 0) {\n      const newValue = {\n        ...tmpValue,\n        category: '',\n      };\n      setTmpValue(newValue);\n      setValidCheck(isValid(newValue));\n      return;\n    }\n    if (index - 1 < props.categories.length) {\n      const newValue = {\n        ...tmpValue,\n        category: props.categories[index - 1],\n      };\n      setTmpValue(newValue);\n      setValidCheck(isValid(newValue));\n      return;\n    }\n\n    // set text to empty\n    const newValue = { ...tmpValue, category: '' };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n    setShowText(true);\n  }\n\n  function handleCategoryNameChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      category: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  const defaultFocus = React.useRef<any>(null);\n\n  const { category } = props.value;\n  const noCategories = props.categories.length <= 0;\n  const notInCategoryList =\n    category !== undefined && props.categories.indexOf(category) < 0;\n  const showDialogText = showText || noCategories || notInCategoryList;\n\n  return (\n    <div>\n      <Dialog\n        isOpen={props.isOpen}\n        description={props.descriptionText}\n        isValid={\n          isValidCheck.name && isValidCheck.comment && isValidCheck.category\n        }\n        onOpen={handleOpen}\n        onClose={handleClose}\n        title={props.title}\n        ok={props.okText}\n        another={props.anotherText}\n        cancel={props.cancelText}\n      >\n        <TextField\n          error={!isValidCheck.name}\n          inputRef={input => {\n            defaultFocus.current = input;\n          }}\n          margin=\"dense\"\n          label=\"Item name\"\n          placeholder=\"What's the name of the item?\"\n          type=\"text\"\n          onChange={handleNameChange}\n          fullWidth\n          value={tmpValue.name}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          error={!isValidCheck.comment}\n          margin=\"dense\"\n          label=\"Comment (optional)\"\n          placeholder=\"How many of this item?\"\n          value={tmpValue.comment}\n          onChange={handleCommentChange}\n          type=\"text\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {!showDialogText && (\n          <Select\n            title=\"Category\"\n            value={tmpValue.category}\n            onChange={index => handleCategoryIndexChange(index)}\n            choices={['[None]', ...props.categories, '[Add Category]']}\n          />\n        )}\n        {showDialogText && (\n          <TextField\n            autoFocus={true}\n            error={!isValidCheck.category}\n            margin=\"dense\"\n            label=\"Category (optional)\"\n            placeholder=\"Which category?\"\n            value={tmpValue.category}\n            onChange={handleCategoryNameChange}\n            type=\"text\"\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        )}\n        {props.listOptions && tmpList !== undefined && (\n          <Select\n            title=\"List (optional, moves item to another list)\"\n            value={props.listOptions[tmpList]}\n            onChange={handleListChange}\n            choices={props.listOptions}\n          />\n        )}\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport ItemDialog from './GenericDialog';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  isOpen: boolean;\n  categories: string[];\n  onCommit: (value: Item) => void;\n}\n\nconst initialValue: Item = { name: '', comment: '', category: undefined };\n\nexport default function (props: Props) {\n  return (\n    <ItemDialog\n      value={initialValue}\n      title=\"Create Item\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      descriptionText=\"Pick the name for your new item.\"\n      {...props}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\nimport { SimpleItem as Item } from '../../redux/state';\n\nexport function extractCategories(state: RootState) {\n  const set: Set<string> = new Set();\n  state.lists.forEach(list =>\n    list.items\n      .filter(item => item.category !== undefined)\n      .forEach(item => set.add(item.category!))\n  );\n  return Array.from(set);\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_ITEM,\n  categories: extractCategories(state),\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: Item) => value && actions.addItem(value),\n});\n\nexport default connector(Component);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState } = state;\n  if (\n    dialogState?.type === DialogType.EDIT_LIST &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists.length\n  ) {\n    const initialValue = state.lists[dialogState.index].name;\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: '',\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: string) => actions.editList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: string;\n  onCommit: (value: string) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      isEdit={true}\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n      onCommit={value => value && props.onCommit(value.name)}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\nimport { extractCategories } from './AddDialogContainer';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState, selectedList } = state;\n  if (\n    selectedList !== undefined &&\n    selectedList >= 0 &&\n    selectedList < state.lists.length &&\n    dialogState?.type === DialogType.EDIT_ITEM &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists[selectedList].items.length\n  ) {\n    const initialValue = state.lists[selectedList].items[dialogState.index];\n    return {\n      isOpen: true,\n      initialValue,\n      listOptions: state.lists.map(({ name }) => name),\n      selectedList,\n      categories: extractCategories(state),\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: { name: '', comment: '' },\n    categories: [],\n    listOptions: undefined,\n    selectedList: undefined,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: {\n    name: string;\n    comment: string;\n    listIndex?: number;\n    category?: string;\n  }) => value && actions.editItem(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  categories: string[];\n  isOpen: boolean;\n  initialValue: Item;\n  onCommit: (value: Item) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '../common/Dialog';\nimport CryptoJS from 'crypto-js';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Ajv from 'ajv';\nimport configFile from './encrypted.json';\nimport { GoogleSheetSchema } from '../../redux/state';\nimport { logger } from '../common/Notifier';\n\ntype GoogleSheetState = {\n  spreadsheetId: string;\n  range: string;\n  clientId: string;\n  apiKey: string;\n};\n\ninterface Props {\n  // internal\n  isOpen: boolean;\n  //\n  spreadsheetId: string;\n  range: string;\n  clientId: string;\n  apiKey: string;\n  onCommit: (value: GoogleSheetState) => void;\n}\n\nfunction isValid(text: string) {\n  return text.trim().length > 0;\n}\n\nfunction decrypt(\n  password: string,\n  encrypted: string = configFile\n): GoogleSheetState {\n  const decrypted = CryptoJS.AES.decrypt(encrypted, password);\n  const obj = JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\n\n  const ajv = new Ajv({ allErrors: true });\n  const test = ajv.compile(GoogleSheetSchema);\n  if (test(obj)) {\n    return obj as GoogleSheetState;\n  }\n  console.error(`Decrypted object:\n  ${JSON.stringify(obj, null, 2)}\n  Failed validation:\n  ${JSON.stringify(test.errors, null, 2)}`);\n\n  throw Error('Invalid decrypt');\n}\n\nexport default function (props: Props) {\n  const [spreadsheetId, setSpreadsheetId] = React.useState(props.spreadsheetId);\n  const [range, setRange] = React.useState(props.range);\n  const [clientId, setClientId] = React.useState(props.clientId);\n  const [apiKey, setApiKey] = React.useState(props.apiKey);\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      // lazy...\n      const magicPrefix = 'secret:';\n      if (apiKey.startsWith(magicPrefix)) {\n        const result = decrypt(apiKey.slice(magicPrefix.length));\n        props.onCommit(result);\n        logger.info('Decrypted. Refresh required.');\n      } else {\n        props.onCommit({\n          spreadsheetId,\n          range,\n          clientId,\n          apiKey,\n        });\n      }\n    }\n  }\n\n  function handleOpen() {\n    setSpreadsheetId(props.spreadsheetId);\n    setRange(props.range);\n    setClientId(props.clientId);\n    setApiKey(props.apiKey);\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  const defaultFocus = React.useRef<any>(null);\n  const validApiKey = isValid(apiKey);\n  const validClientId = isValid(clientId);\n  const validRange = isValid(range);\n  const validSpreadsheetId = isValid(spreadsheetId);\n\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      isOpen={props.isOpen}\n      isValid={validApiKey && validClientId && validRange && validSpreadsheetId}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      title={'Setup Google Sheets'}\n      description={'Setup details for accessing GoogleSheets.'}\n      ok={'Done'}\n      cancel={'Cancel'}\n    >\n      <DialogContentText className={classes.helperText}>\n        GoogleSheets API access details. (Requires page refresh to reflect\n        changes.)\n      </DialogContentText>\n      <TextField\n        error={!validApiKey}\n        inputRef={input => {\n          defaultFocus.current = input;\n        }}\n        margin=\"dense\"\n        label=\"API Key\"\n        type=\"text\"\n        onChange={event => setApiKey(event.target.value)}\n        fullWidth\n        value={apiKey}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        error={!validClientId}\n        margin=\"dense\"\n        label=\"Client ID\"\n        type=\"text\"\n        onChange={event => setClientId(event.target.value)}\n        fullWidth\n        value={clientId}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <DialogContentText className={classes.helperText}>\n        Target spreadsheet and sheet name ids.\n      </DialogContentText>\n      <TextField\n        error={!validSpreadsheetId}\n        margin=\"dense\"\n        label=\"Spreadsheet ID\"\n        type=\"text\"\n        onChange={event => setSpreadsheetId(event.target.value)}\n        fullWidth\n        value={spreadsheetId}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        error={!validRange}\n        margin=\"dense\"\n        label=\"Sheet Name\"\n        type=\"text\"\n        onChange={event => setRange(event.target.value)}\n        fullWidth\n        value={range}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </Dialog>\n  );\n}\n\n// TODO: not really handling sign out (and sign back in)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    helperText: {\n      marginTop: 20,\n      marginBottom: 0,\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './SetupDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  spreadsheetId: state.googleSheets?.spreadsheetId ?? '',\n  range: state.googleSheets?.range ?? '',\n  clientId: state.googleSheets?.clientId ?? '',\n  apiKey: state.googleSheets?.apiKey ?? '',\n  isOpen: state.dialogState?.type === DialogType.SETUP_GOOGLE_SHEETS,\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: RootState['googleSheets']) =>\n    actions.setGoogleSheetsDetails(value),\n});\n\nexport default connector(Component);\n","// colors for categories\nexport const COLORS = [\n  '#70d470',\n  '#ffdb66',\n  '#0076ff',\n  '#d5ff00',\n  '#ff937e',\n  '#007db5',\n  '#ff00f6',\n  '#90fb92',\n  '#7979fa',\n  '#f16d6d',\n  '#40f7f7',\n  '#ffa6fe',\n  '#6a826c',\n  '#ff029d',\n  '#fe8900',\n  '#7a4782',\n  '#7e2dd2',\n  '#85a900',\n  '#ff0056',\n  '#a42400',\n  '#00ae7e',\n  '#42af44',\n  '#683d3b',\n  '#bdd393',\n  '#00b917',\n  '#9e008e',\n  '#c28c9f',\n  '#ff74a3',\n  '#01d0ff',\n  '#004754',\n  '#e56ffe',\n  '#788231',\n  '#0e4ca1',\n  '#91d0cb',\n  '#be9970',\n  '#968ae8',\n  '#bb8800',\n  '#deff74',\n  '#00ffc6',\n  '#ffe502',\n  '#620e00',\n  '#008f9c',\n  '#98ff52',\n  '#7544b1',\n  '#b500ff',\n  '#00ff78',\n  '#ff6e41',\n  '#005f39',\n  '#6b6882',\n  '#5fad4e',\n  '#a75740',\n  '#a5ffd2',\n  '#ffb167',\n  '#009bff',\n  '#e85ebe',\n];\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\nimport { Item } from '../../redux/state';\nimport { extractCategories } from './AddDialogContainer';\nimport { COLORS } from '../common/Colors';\n\nconst defaultSorter = (a: Item, b: Item) =>\n  Number(!a.enabled) - Number(!b.enabled);\n\nconst alphabeticSorter = (a: Item, b: Item) => {\n  const defaultResult = defaultSorter(a, b);\n\n  if (defaultResult !== 0) {\n    return defaultResult;\n  }\n\n  const { name: aName } = a;\n  const { name: bName } = b;\n  if (aName === undefined || bName === undefined) {\n    return Number(aName === undefined) - Number(bName === undefined);\n  }\n  return aName.localeCompare(bName);\n};\n\nconst categorySorter = (a: Item, b: Item) => {\n  const defaultResult = defaultSorter(a, b);\n\n  if (defaultResult !== 0) {\n    return defaultResult;\n  }\n\n  const { category: aCategory } = a;\n  const { category: bCategory } = b;\n  if (aCategory === undefined || bCategory === undefined) {\n    return Number(aCategory === undefined) - Number(bCategory === undefined);\n  }\n  return aCategory.localeCompare(bCategory);\n};\n\nfunction buildMapper(state: RootState) {\n  const { categoryColorMapper } = state;\n\n  // use user-defined color mapper\n  if (categoryColorMapper !== undefined) {\n    return (category: string | undefined) => {\n      if (category === undefined) {\n        return undefined;\n      }\n      return categoryColorMapper[category];\n    };\n  }\n\n  // use default color array\n  const categories = extractCategories(state);\n  return (category: string | undefined) => {\n    if (category === undefined) {\n      return undefined;\n    }\n    const index = categories.indexOf(category);\n    if (index !== -1 && index < COLORS.length) {\n      return COLORS[index];\n    }\n    return undefined;\n  };\n}\n\nconst mapToListState = (state: RootState) => {\n  const index = state.selectedList;\n  const sorter =\n    state.sortMode === 'categories'\n      ? categorySorter\n      : state.sortMode === 'alphabetic'\n      ? alphabeticSorter\n      : defaultSorter;\n\n  if (index !== undefined) {\n    const extractColor =\n      state.categoryMode === 'color' ? buildMapper(state) : () => undefined;\n\n    return {\n      lists: state.lists[index].items\n        .map((item, index) => ({\n          ...item,\n          index,\n        }))\n        .sort(sorter),\n      categoryMode: state.categoryMode,\n      clickEnabled: state.itemClick,\n      extractColor,\n    };\n  }\n  return { lists: [], clickEnabled: state.itemClick };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteItem(index),\n  onEdit: (index: number) => actions.openEditItemDialog(index),\n  onClick: (index: number) => actions.toggleItem(index),\n  toggleClick: () => actions.toggleItemClick(),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight'> & {\n  onEdit: (index: number) => void;\n  toggleClick: () => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={true}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: (index: number) => props.onEdit(index),\n          },\n        ],\n        [\n          {\n            label: 'Delete',\n            action: (index: number) => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import { ConnectedProps, connect } from 'react-redux';\nimport React from 'react';\nimport AppBar from './app-bar/AppBarContainer';\nimport List from './shopping-list/ListContainer';\nimport AddListDialog from './shopping-list/AddDialogContainer';\nimport AddItemDialog from './item-list/AddDialogContainer';\nimport EditListDialog from './shopping-list/EditDialogContainer';\nimport EditItemDialog from './item-list/EditDialogContainer';\nimport SetupGoogleSheetsDialog from './google-sheets/SetupDialogContainer';\nimport ItemList from './item-list/ListContainer';\nimport { RootState } from '../redux/store';\nimport Notifier from './common/Notifier';\n\nconst connector = connect((state: RootState) => ({\n  isListSelected: state.selectedList !== undefined,\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction Main(props: Props) {\n  const children: JSX.Element[] = [];\n  const isItemView = props.isListSelected;\n  if (isItemView) {\n    children.push(<ItemList key=\"item-list\" />);\n    children.push(<AddItemDialog key=\"item-add-dialog\" />);\n    children.push(<EditItemDialog key=\"item-edit-dialog\" />);\n    children.push(<SetupGoogleSheetsDialog key=\"setup-google-sheets-dialog\" />);\n  } else {\n    children.push(<List key=\"list\" />);\n    children.push(<AddListDialog key=\"list-add-dialog\" />);\n    children.push(<EditListDialog key=\"list-edit-dialog\" />);\n    children.push(<SetupGoogleSheetsDialog key=\"setup-google-sheets-dialog\" />);\n  }\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        // border: '1px solid blue',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n      }}\n    >\n      <AppBar />\n      <Notifier />\n      {children}\n    </div>\n  );\n}\n\nexport default connector(Main);\n","import React from 'react';\nimport Main from './components/Main';\nimport {\n  // TODO: update version once warning is fixed, see: https://github.com/mui-org/material-ui/issues/13394\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  Theme,\n  makeStyles,\n  createStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  transitions: {\n    // Disable transitions since they make UI feel slow\n    create: () => 'none',\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      minHeight: '100vh',\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      flexDirection: 'column',\n    },\n  })\n);\n\nexport default function () {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shopper/App';\nimport { store } from './shopper/redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nfunction isDebug(): boolean {\n  const url = new URL(window.location.href);\n  const param = url.searchParams.get('debug');\n  return Boolean(param);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  console.log('No service worker enabled.');\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}