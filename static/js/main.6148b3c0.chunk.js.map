{"version":3,"sources":["shopper/redux/state.ts","shopper/redux/localStorage.ts","shopper/components/common/Notifier.tsx","shopper/redux/id.ts","shopper/redux/slice.ts","shopper/redux/store.ts","shopper/components/shopping-list/AddButton.tsx","shopper/components/shopping-list/AddButtonContainer.tsx","shopper/components/item-list/AddButton.tsx","shopper/components/item-list/AddButtonContainer.tsx","shopper/components/common/Menu.tsx","shopper/components/app-bar/AppBar.tsx","shopper/components/app-bar/AppBarContainer.tsx","version.ts","shopper/components/common/ContextMenu.tsx","shopper/components/common/List.tsx","shopper/components/shopping-list/ListContainer.tsx","shopper/components/common/Dialog.tsx","shopper/importer.ts","shopper/components/shopping-list/GenericDialog.tsx","shopper/components/shopping-list/AddDialogContainer.tsx","shopper/components/shopping-list/AddDialog.tsx","shopper/components/common/Select.tsx","shopper/components/item-list/GenericDialog.tsx","shopper/components/item-list/AddDialog.tsx","shopper/components/item-list/AddDialogContainer.tsx","shopper/components/shopping-list/EditDialogContainer.tsx","shopper/components/shopping-list/EditDialog.tsx","shopper/components/item-list/EditDialogContainer.tsx","shopper/components/item-list/EditDialog.tsx","shopper/components/common/Colors.ts","shopper/components/item-list/ListContainer.tsx","shopper/components/Main.tsx","shopper/App.tsx","serviceWorker.ts","index.tsx"],"names":["DialogType","ShopperStateSchema","title","type","properties","selectedList","sortMode","enum","categoryMode","categoryColorMapper","patternProperties","additionalProperties","categories","minItems","items","required","name","minLength","lists","id","comment","enabled","category","key","validate","obj","test","Ajv","allErrors","compile","schema","console","error","JSON","stringify","errors","Error","logger","toast","transition","cssTransition","enter","exit","duration","appendPosition","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","timestamp","Date","now","toString","counter","newId","prefix","finalPrefix","undefined","newItemId","initialState","defaultValue","raw","localStorage","getItem","parse","load","isInBounds","index","array","length","shopperSlice","createSlice","reducers","setDefaultSort","state","setCategorySort","setTextCategoryMode","setHiddenCategoryMode","setColorCategoryMode","addList","action","payload","push","map","editList","dialogState","EDIT_LIST","info","deleteList","splice","deleted","listUndo","selectList","deselectList","itemUndo","undoItemDeletion","listIndex","undo","pop","warn","undoListDeletion","addItem","editItem","EDIT_ITEM","newListIndex","itemIndex","item","moved","deleteItem","toggleItem","openAddListDialog","ADD_LIST","openEditListDialog","openAddItemDialog","ADD_ITEM","openEditItemDialog","closeDialog","copyToClipboard","navigator","clipboard","writeText","copyItemsToClipboard","text","join","updateState","actions","reducer","store","configureStore","sliceActions","importFromClipboard","dispatch","readText","then","value","catch","log","subscribe","shallowClone","setItem","save","getState","useStyles","makeStyles","theme","createStyles","button","color","connector","connect","openDialog","props","classes","IconButton","className","edge","aria-label","onClick","React","useState","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","children","Menu","keepMounted","open","Boolean","onClose","flatMap","actionList","outerIndex","result","innerIndex","label","selected","MenuItem","unshift","Divider","root","flexGrow","menuButton","rightButton","display","justifyContent","alignItems","list","listName","totalItemCount","pendingItemCount","reduce","prev","curr","Number","itemActions","sortActions","AppBar","Toolbar","Typography","variant","anchorPosition","top","y","left","x","anchorReference","mouse","useRef","time","handleMouseDown","e","current","screenX","handleMouseClick","Math","abs","preventDefault","onChangeIndex","start","i","onDelete","setState","handleOpenContextMenu","clientX","clientY","ContextMenu","List","component","panels","ListItem","enabledItem","disabledItem","style","backgroundColor","extractColor","onContextMenu","onMouseDown","ListItemText","primary","secondary","rightPanel","swipeRight","leftPanel","startIndex","enableMouseEvents","height","direction","marginRight","marginLeft","palette","background","default","flex","flexDirection","overflow","marginTop","marginBottom","userSelect","textDecoration","opacity","grey","dispatchToProps","onEdit","useDispatch","commit","onOpen","Dialog","fullScreen","isOpen","onEnter","DialogTitle","DialogContent","DialogContentText","description","DialogActions","another","Button","disabled","isValid","cancel","ok","regex","notNull","importText","rawText","split","txt","trim","filter","match","newValue","initialCheck","isValidCheck","setValidCheck","tmpValue","setTmpValue","includeClipboard","setIncludeClipboard","a","target","checked","count","allowedImport","defaultFocus","focus","onCommit","descriptionText","okText","anotherText","cancelText","TextField","inputRef","input","margin","onChange","fullWidth","InputLabelProps","shrink","isEdit","FormControlLabel","control","Checkbox","Select","InputLabel","htmlFor","NativeSelect","selectedIndex","choices","choice","tmpList","setTmpList","showText","setShowText","noCategories","notInCategoryList","indexOf","showDialogText","placeholder","handleCategoryIndexChange","autoFocus","listOptions","initialValue","extractCategories","set","Set","forEach","add","Array","from","COLORS","defaultSorter","b","categorySorter","defaultResult","aCategory","bCategory","localeCompare","sorter","buildMapper","sort","isListSelected","flexFlow","Notifier","createMuiTheme","MuiButtonBase","disableRipple","transitions","create","app","minHeight","ThemeProvider","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","App","document","getElementById","param","URL","href","searchParams","get","isDebug","ready","unregister","message","process","origin","addEventListener","fetch","headers","response","contentType","status","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6148b3c0.chunk.js","sourcesContent":["import { ThunkAction, Action } from '@reduxjs/toolkit';\n\nconst SORT_MODES = ['default', 'categories'] as const;\nexport type SortMode = typeof SORT_MODES[number];\n\nconst CATEGORY_MODES = ['text', 'color', 'hidden'] as const;\nexport type CategoryMode = typeof CATEGORY_MODES[number];\n\nexport interface Category {\n  name: string;\n}\n\nconst CategorySchema = {\n  type: 'object',\n  required: ['name'],\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n  },\n};\n\nexport interface Item {\n  id: string;\n  name: string;\n  comment: string;\n  enabled: boolean;\n  category?: string;\n}\n\nexport type SimpleItem = Omit<Item, 'enabled' | 'id'>;\n\nconst ItemSchema = {\n  type: 'object',\n  required: ['id', 'name', 'enabled'],\n  properties: {\n    id: {\n      type: 'string',\n      minLength: 1,\n    },\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    comment: {\n      type: 'string',\n    },\n    enabled: {\n      type: 'boolean',\n    },\n    category: {\n      type: 'string',\n      minLength: 1,\n    },\n  },\n};\n\nexport interface List {\n  id: string;\n  name: string;\n  items: Item[];\n}\n\nconst ListSchema = {\n  type: 'object',\n  required: ['id', 'name', 'items'],\n  properties: {\n    id: {\n      type: 'string',\n      minLength: 1,\n    },\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    items: {\n      type: 'array',\n      minItems: 0,\n      items: ItemSchema,\n    },\n  },\n};\n\nexport interface ShopperState {\n  selectedList?: number;\n  sortMode?: SortMode;\n  categoryMode?: CategoryMode;\n  categoryColorMapper?: {\n    [category: string]: string;\n  };\n  lists: List[];\n  // not in schema\n  dialogState?: DialogState;\n  listUndo?: List[];\n  itemUndo?: Item[];\n}\n\nexport const ShopperStateSchema = {\n  title: 'ShopperState',\n  type: 'object',\n  properties: {\n    selectedList: {\n      type: 'number',\n    },\n    sortMode: { type: 'string', enum: SORT_MODES },\n    categoryMode: { type: 'string', enum: CATEGORY_MODES },\n    categoryColorMapper: {\n      type: 'object',\n      patternProperties: {\n        '^.*$': {\n          type: 'string',\n        },\n      },\n      additionalProperties: false,\n    },\n    categories: {\n      type: 'array',\n      minItems: 0,\n      items: CategorySchema,\n    },\n    lists: {\n      type: 'array',\n      minItems: 0,\n      items: ListSchema,\n    },\n  },\n  additionalProperties: false,\n  required: ['lists'],\n};\n\n// not in schema\nexport enum DialogType {\n  ADD_LIST,\n  EDIT_LIST,\n  ADD_ITEM,\n  EDIT_ITEM,\n}\n\nexport interface AddListDialog {\n  type: DialogType.ADD_LIST;\n}\nexport interface AddItemDialog {\n  type: DialogType.ADD_ITEM;\n}\n\nexport interface EditListDialog {\n  type: DialogType.EDIT_LIST;\n  index: number;\n}\n\nexport interface EditItemDialog {\n  type: DialogType.EDIT_ITEM;\n  index: number;\n}\n\nexport type DialogState =\n  | AddListDialog\n  | AddItemDialog\n  | EditListDialog\n  | EditItemDialog;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  ShopperState,\n  unknown,\n  Action<string>\n>;\n","import Ajv from 'ajv';\n\nimport type { ShopperState } from './state';\nimport { ShopperStateSchema as schema } from './state';\n\nconst key = 'shopper-state';\n\nexport function validate(obj: unknown): ShopperState {\n  const ajv = new Ajv({ allErrors: true });\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return obj as ShopperState;\n  }\n  console.error(`Existing state object:\n${JSON.stringify(obj, null, 2)}\nFailed validation:\n${JSON.stringify(test.errors, null, 2)}`);\n\n  throw Error('Invalid object');\n}\n\nexport function load(defaultValue: ShopperState): ShopperState {\n  const raw = localStorage.getItem(key);\n  if (raw === null) {\n    return defaultValue;\n  }\n  const object = JSON.parse(raw);\n  return validate(object);\n}\n\nexport function save(state: ShopperState) {\n  const shallowClone = {\n    ...state,\n    // ensure not saved\n    dialogState: undefined,\n    listUndo: undefined,\n    itemUndo: undefined,\n  };\n  localStorage.setItem(key, JSON.stringify(shallowClone));\n}\n","import React from 'react';\nimport { ToastContainer, cssTransition, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const logger = toast;\n\nexport default function () {\n  // copied from Slide to change durations\n  // https://github.com/fkhadra/react-toastify/blob/da5fab4006456434d7ad29360aa702d2c725a9a1/src/components/Transitions.tsx\n  const transition = cssTransition({\n    enter: `Toastify__slide-enter`,\n    exit: `Toastify__slide-exit`,\n    duration: [200, 200],\n    appendPosition: true,\n  });\n\n  // more customization?\n  // https://github.com/fkhadra/react-toastify/issues/455\n\n  return (\n    <ToastContainer\n      transition={transition}\n      position=\"bottom-left\"\n      autoClose={2000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      closeOnClick={false}\n      rtl={false}\n      pauseOnFocusLoss={false}\n      draggable={false}\n      pauseOnHover={false}\n    />\n  );\n}\n","const timestamp = Date.now().toString(36);\nlet counter = 0;\n\nexport default function newId(prefix: string | undefined) {\n  const finalPrefix = prefix === undefined ? '' : `${prefix}-`;\n  return `${finalPrefix}id(${timestamp}:${counter++})`;\n}\n\nexport const newListId = () => newId('list');\nexport const newItemId = () => newId('item');\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ShopperState, DialogType, AppThunk } from './state';\nimport { load, validate } from './localStorage';\nimport { logger } from '../components/common/Notifier';\nimport { newListId, newItemId } from './id';\n\nconst defaultValue: ShopperState = {\n  selectedList: undefined,\n  sortMode: undefined,\n  lists: [],\n};\n\nconst initialState: ShopperState = load(defaultValue);\n\nconst isInBounds = <T>(index: number, array: T[]) =>\n  index >= 0 && index < array.length;\n\nexport const shopperSlice = createSlice({\n  name: 'shopper',\n  initialState,\n  reducers: {\n    // sort\n    setDefaultSort: state => {\n      state.sortMode = 'default';\n    },\n    setCategorySort: state => {\n      state.sortMode = 'categories';\n    },\n    // category\n    setTextCategoryMode: state => {\n      state.categoryMode = 'text';\n    },\n    setHiddenCategoryMode: state => {\n      state.categoryMode = 'hidden';\n    },\n    setColorCategoryMode: state => {\n      state.categoryMode = 'color';\n    },\n    // list\n    addList: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        items: { name: string; comment: string }[];\n      }>\n    ) => {\n      const { name, items } = action.payload;\n      state.lists.push({\n        id: newListId(),\n        name,\n        items: items.map(({ name, comment }) => ({\n          id: newItemId(),\n          name,\n          comment,\n          enabled: true,\n        })),\n      });\n    },\n    editList: (state, action: PayloadAction<string>) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_LIST) {\n        const { index } = dialogState;\n        const name = action.payload;\n        if (isInBounds(index, state.lists)) {\n          state.lists[index].name = name;\n          logger.info('List updated');\n        }\n      }\n    },\n    deleteList: (state, action: PayloadAction<number>) => {\n      const index = action.payload;\n      if (isInBounds(index, state.lists)) {\n        const [deleted] = state.lists.splice(index, 1);\n\n        if (state.listUndo === undefined) {\n          state.listUndo = [];\n        }\n        state.listUndo.push(deleted);\n\n        logger.info(`List \"${deleted.name}\" deleted`);\n      }\n    },\n    selectList: (state, action: PayloadAction<number>) => {\n      state.selectedList = action.payload;\n    },\n    deselectList: state => {\n      state.selectedList = undefined;\n      state.itemUndo = undefined;\n    },\n    // undo\n    undoItemDeletion: state => {\n      const listIndex = state.selectedList;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        state.itemUndo !== undefined &&\n        state.itemUndo.length > 0\n      ) {\n        const undo = state.itemUndo.pop();\n        if (undo !== undefined) {\n          state.lists[listIndex].items.push(undo);\n          logger.info('Item restored');\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    undoListDeletion: state => {\n      if (state.listUndo !== undefined && state.listUndo.length > 0) {\n        const undo = state.listUndo.pop();\n        if (undo !== undefined) {\n          state.lists.push(undo);\n          logger.info(`List \"${undo.name}\" restored`);\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    // item\n    addItem: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        comment: string;\n        category?: string;\n      }>\n    ) => {\n      const { name, comment, category } = action.payload;\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        state.lists[listIndex].items.push({\n          id: newItemId(),\n          name,\n          comment,\n          enabled: true,\n          category,\n        });\n      }\n    },\n    editItem: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        comment: string;\n        listIndex?: number;\n        category?: string;\n      }>\n    ) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_ITEM) {\n        const { index } = dialogState;\n        const {\n          name,\n          comment,\n          listIndex: newListIndex,\n          category,\n        } = action.payload;\n\n        const listIndex = state.selectedList;\n        const itemIndex = index;\n        if (\n          listIndex !== undefined &&\n          isInBounds(listIndex, state.lists) &&\n          isInBounds(itemIndex, state.lists[listIndex].items)\n        ) {\n          const item = state.lists[listIndex].items[itemIndex];\n          item.name = name;\n          item.comment = comment;\n          item.category = category;\n\n          if (\n            newListIndex !== undefined &&\n            listIndex !== newListIndex &&\n            isInBounds(newListIndex, state.lists)\n          ) {\n            const [moved] = state.lists[listIndex].items.splice(itemIndex, 1);\n            state.lists[newListIndex].items.push(moved);\n            logger.info('Item moved');\n          } else {\n            logger.info('Item updated');\n          }\n        }\n      }\n    },\n    deleteItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const [deleted] = state.lists[listIndex].items.splice(itemIndex, 1);\n\n        if (state.itemUndo === undefined) {\n          state.itemUndo = [];\n        }\n        state.itemUndo.push(deleted);\n\n        logger.info('Item deleted');\n      }\n    },\n    toggleItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const item = state.lists[listIndex].items[itemIndex];\n        item.enabled = !item.enabled;\n      }\n    },\n    // dialog\n    openAddListDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_LIST,\n      };\n    },\n    openEditListDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_LIST,\n        index: action.payload,\n      };\n    },\n    openAddItemDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_ITEM,\n      };\n    },\n    openEditItemDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_ITEM,\n        index: action.payload,\n      };\n    },\n    closeDialog: state => {\n      state.dialogState = undefined;\n    },\n    copyToClipboard: state => {\n      if (navigator?.clipboard?.writeText) {\n        navigator.clipboard.writeText(JSON.stringify(state));\n        logger.info('Copied to clipboard');\n      } else {\n        logger.error('ERROR: denied use of browser clipboard');\n      }\n    },\n    copyItemsToClipboard: state => {\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        if (navigator?.clipboard?.writeText) {\n          const items = state.lists[listIndex].items;\n          const text = items\n            .map(({ name, comment }) => `${name} ${comment}`)\n            .join('\\n');\n          navigator.clipboard.writeText(text);\n          logger.info(`Copied ${items.length} items to clipboard`);\n        } else {\n          logger.error('ERROR: denied use of browser clipboard');\n        }\n      }\n    },\n    updateState: (state, action: PayloadAction<ShopperState>) => {\n      state.lists = action.payload.lists;\n      state.selectedList = undefined;\n    },\n  },\n});\n\nexport const importFromClipboard = (): AppThunk => dispatch => {\n  if (navigator?.clipboard?.readText) {\n    navigator.clipboard\n      .readText()\n      .then(value => {\n        const obj = JSON.parse(value);\n        const state = validate(obj);\n        dispatch(actions.updateState(state));\n        logger.info('Imported from clipboard');\n      })\n      .catch(error => {\n        console.log(error);\n        logger.error(`ERROR: ${error}`);\n      });\n  } else {\n    logger.error('ERROR: denied use of browser clipboard');\n  }\n};\n\nexport const { actions, reducer } = shopperSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { reducer, actions as sliceActions, importFromClipboard } from './slice';\nimport { save } from './localStorage';\n\nexport const store = configureStore({ reducer });\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const actions = {\n  ...sliceActions,\n  importFromClipboard,\n};\n\n// auto-save\nstore.subscribe(() => {\n  const state = store.getState();\n  save(state);\n  // console.log(JSON.stringify(state));\n});\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add list\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddListDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add item\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddItemDialog(),\n});\n\nexport default connector(Component);\n","import React, { ReactNode } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  children: ReactNode;\n  actions: {\n    label: string;\n    action: () => void;\n    selected?: boolean;\n  }[][];\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        className={classes.button}\n        aria-controls=\"simple-menu\"\n        edge=\"end\"\n        aria-label=\"menu\"\n        color=\"secondary\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {props.children}\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.actions.flatMap((actionList, outerIndex) => {\n          const result = actionList.map(\n            ({ label, action, selected }, innerIndex) => (\n              <MenuItem\n                key={`outer=${outerIndex}-inner${innerIndex}`}\n                onClick={() => {\n                  handleClose();\n                  action();\n                }}\n                selected={!!selected}\n              >\n                {label}\n              </MenuItem>\n            )\n          );\n          // add separator if adding a new set of actions\n          if (outerIndex !== 0) {\n            result.unshift(<Divider key={`divider-${outerIndex}`} />);\n          }\n          return result;\n        })}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/ArrowBackRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddList from '../shopping-list/AddButtonContainer';\nimport AddItem from '../item-list/AddButtonContainer';\nimport Menu from '../common/Menu';\nimport ActionsMenuIcon from '@material-ui/icons/MoreVert';\nimport SortMenuIcon from '@material-ui/icons/Sort';\n\nimport version from '../../../version';\nimport { toast } from 'react-toastify';\nimport { SortMode, CategoryMode } from '../../redux/state';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 0,\n    },\n    title: {\n      flexGrow: 0,\n    },\n    menuButton: {\n      flexGrow: 0,\n    },\n    rightButton: {\n      // flexDirection: 'row',\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      // border: '1px solid blue',\n    },\n  })\n);\n\ninterface Props {\n  selectedList?: {\n    listName: string;\n    pendingItemCount: number;\n    totalItemCount: number;\n  };\n  sortMode: SortMode;\n  categoryMode: CategoryMode;\n  deselectList: () => void;\n  copyItemsToClipboard: () => void;\n  copyToClipboard: () => void;\n  importFromClipboard: () => void;\n  undoItemDeletion: () => void;\n  undoListDeletion: () => void;\n  // sort\n  setDefaultSort: () => void;\n  setCategorySort: () => void;\n  // categories\n  setTextCategoryMode: () => void;\n  setHiddenCategoryMode: () => void;\n  setColorCategoryMode: () => void;\n}\n\nconst shopperTitle = 'Shopper';\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n\n  let title = shopperTitle;\n  if (props.selectedList) {\n    const { listName, pendingItemCount, totalItemCount } = props.selectedList;\n    title = listName!;\n    if (totalItemCount! > 0) {\n      title = `(${pendingItemCount}) ${title}`;\n    }\n  }\n\n  const itemActions = [\n    {\n      label: 'copy list items to clipboard',\n      action: () => props.copyItemsToClipboard(),\n    },\n  ];\n\n  const defaultActions = [\n    {\n      label: 'import state from clipboard',\n      action: () => props.importFromClipboard(),\n    },\n    {\n      label: 'copy state to clipboard',\n      action: () => props.copyToClipboard(),\n    },\n  ];\n\n  const contextActions = [\n    {\n      label: `undo ${props.selectedList ? 'item' : 'list'} deletion`,\n      action: () =>\n        props.selectedList\n          ? props.undoItemDeletion()\n          : props.undoListDeletion(),\n    },\n  ];\n\n  const actions = [defaultActions, contextActions];\n  if (props.selectedList) {\n    actions.unshift(itemActions);\n  }\n\n  const sortActions = [\n    [\n      {\n        label: 'default sort',\n        action: () => props.setDefaultSort(),\n        selected: props.sortMode === 'default',\n      },\n      {\n        label: 'category sort',\n        action: () => props.setCategorySort(),\n        selected: props.sortMode === 'categories',\n      },\n    ],\n    [\n      {\n        label: 'hidden category',\n        action: () => props.setHiddenCategoryMode(),\n        selected: props.categoryMode === 'hidden',\n      },\n      {\n        label: 'text category',\n        action: () => props.setTextCategoryMode(),\n        selected: props.categoryMode === 'text',\n      },\n      {\n        label: 'color category',\n        action: () => props.setColorCategoryMode(),\n        selected: props.categoryMode === 'color',\n      },\n    ],\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.selectedList && (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => props.deselectList()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => {\n              if (title === shopperTitle) {\n                toast.info(version);\n              }\n            }}\n          >\n            {title}\n          </Typography>\n          <div className={classes.rightButton}>\n            {props.selectedList ? <AddItem /> : <AddList />}\n          </div>\n          {props.selectedList && (\n            <Menu actions={sortActions}>\n              <SortMenuIcon />\n            </Menu>\n          )}\n          <Menu actions={actions}>\n            <ActionsMenuIcon />\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport type { RootState } from '../../redux/store';\nimport { actions } from '../../redux/store';\nimport Component from './AppBar';\n\nexport const mapStateToProps = (state: RootState) => {\n  if (state.selectedList !== undefined) {\n    const list = state.lists[state.selectedList!];\n    const listName = list.name;\n    const totalItemCount = list.items.length;\n    const pendingItemCount = list.items.reduce(\n      (prev, curr) => prev + Number(!!curr.enabled),\n      0\n    );\n    return {\n      selectedList: {\n        totalItemCount,\n        pendingItemCount,\n        listName,\n      },\n      sortMode: state.sortMode || 'default',\n      categoryMode: state.categoryMode || 'text',\n    };\n  }\n\n  return {\n    selectedList: undefined,\n    sortMode: 'default' as const,\n    categoryMode: 'text' as const,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  deselectList: () => actions.deselectList(),\n  copyItemsToClipboard: () => actions.copyItemsToClipboard(),\n  copyToClipboard: () => actions.copyToClipboard(),\n  importFromClipboard: () => actions.importFromClipboard(),\n  undoItemDeletion: () => actions.undoItemDeletion(),\n  undoListDeletion: () => actions.undoListDeletion(),\n  // sort\n  setDefaultSort: () => actions.setDefaultSort(),\n  setCategorySort: () => actions.setCategorySort(),\n  // category\n  setTextCategoryMode: () => actions.setTextCategoryMode(),\n  setHiddenCategoryMode: () => actions.setHiddenCategoryMode(),\n  setColorCategoryMode: () => actions.setColorCategoryMode(),\n});\n\nexport default connector(Component);\n","export default 'commit: 2dbec0f (2020-07-11T16:52:50.697Z)';\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  position?: {\n    x: number;\n    y: number;\n    index: number;\n  };\n\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n\n  onClose: () => void;\n}\n\nexport default function (props: Props) {\n  const open = props.position !== undefined;\n  const anchorPosition =\n    props.position !== undefined\n      ? { top: props.position.y, left: props.position.x }\n      : undefined;\n\n  return (\n    <Menu\n      keepMounted\n      open={open}\n      onClose={() => props.onClose()}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={anchorPosition}\n    >\n      {props.actions.flatMap((actionList, outerIndex) => {\n        const result = actionList.map(({ label, action }, innerIndex) => (\n          <MenuItem\n            key={`outer=${outerIndex}-inner${innerIndex}`}\n            onClick={() => {\n              if (props.position) {\n                // store in case of changes\n                const { index } = props.position;\n                props.onClose();\n                if (index !== null) {\n                  action(index);\n                }\n              }\n            }}\n          >\n            {label}\n          </MenuItem>\n        ));\n        // add separator if adding a new set of actions\n        if (outerIndex !== 0) {\n          result.unshift(<Divider key={`divider-${outerIndex}`} />);\n        }\n        return result;\n      })}\n    </Menu>\n  );\n}\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ContextMenu from './ContextMenu';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// TODO: update SwipeableViews to remove \"Legacy context API has been detected within a strict-mode tree\" warning. See: https://github.com/oliviertassinari/react-swipeable-views/issues/596\nimport SwipeableViews from 'react-swipeable-views';\nimport { CategoryMode } from '../../redux/state';\n\nexport interface Props {\n  lists: {\n    id: string;\n    name: string;\n    comment: string;\n    enabled?: boolean;\n    category?: string;\n    index: number;\n  }[];\n  onClick: (index: number) => void;\n  onDelete: (index: number) => void;\n  swipeRight: boolean;\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n  categoryMode?: CategoryMode;\n  extractColor?: (category: string | undefined) => string | undefined;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  const mouse = React.useRef({ x: 0, time: 0 });\n\n  const handleMouseDown = (e: any) => {\n    mouse.current.x = e.screenX;\n    mouse.current.time = Date.now();\n  };\n\n  const handleMouseClick = (index: number) => (e: React.MouseEvent) => {\n    // some horizontal movement, ignore click\n    const delta = Math.abs(e.screenX - mouse.current.x);\n    if (delta > 10) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.type === 'click') {\n      props.onClick(index);\n      return;\n    }\n  };\n\n  // on swipe index change\n  const onChangeIndex = (index: number, start: number) => (i: number) => {\n    if (i < start) {\n      props.onClick(index);\n      return;\n    }\n    if (i > start) {\n      props.onDelete(index);\n      return;\n    }\n  };\n\n  const [state, setState] = React.useState<\n    | {\n        x: number;\n        y: number;\n        index: number;\n      }\n    | undefined\n  >(undefined);\n\n  const handleOpenContextMenu = (index: number) => (\n    event: React.MouseEvent<HTMLDivElement>\n  ) => {\n    event.preventDefault();\n    setState({\n      x: event.clientX - 4,\n      y: event.clientY - 4,\n      index,\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setState(undefined);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ContextMenu\n        position={state}\n        onClose={handleCloseContextMenu}\n        actions={props.actions}\n      />\n      <List component=\"nav\" className={classes.list}>\n        {props.lists.map(({ id, name, comment, enabled, index, category }) => {\n          const panels = [\n            <ListItem\n              key=\"middle-panel\"\n              className={\n                enabled !== false ? classes.enabledItem : classes.disabledItem\n              }\n              style={{\n                backgroundColor:\n                  props.categoryMode === 'color' && props.extractColor\n                    ? props.extractColor(category)\n                    : undefined,\n              }}\n              button\n              onContextMenu={handleOpenContextMenu(index)}\n              onClick={handleMouseClick(index)}\n              onMouseDown={handleMouseDown}\n            >\n              <ListItemText primary={name} secondary={comment} />\n              {category && props.categoryMode === 'text' && (\n                <div\n                  style={\n                    {\n                      // borderRadius: '5px',\n                      // border: '2px solid blue',\n                      // fontSize: '13px',\n                      // fontWeight: 'bold',\n                      // padding: '2px',\n                    }\n                  }\n                >\n                  {category}\n                </div>\n              )}\n            </ListItem>,\n            rightPanel,\n          ];\n          if (props.swipeRight) {\n            panels.unshift(leftPanel);\n          }\n          const startIndex = props.swipeRight ? 1 : 0;\n          return (\n            <SwipeableViews\n              // hack: changes the key value to force new item on enabled/disabled\n              // since otherwise SwipeableViews will remain on swiped panel.\n              key={`${id}-${enabled}`}\n              index={startIndex}\n              enableMouseEvents\n              onChangeIndex={onChangeIndex(index, startIndex)}\n            >\n              {panels}\n            </SwipeableViews>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nconst leftPanel = (\n  <div\n    key=\"left-panel\"\n    style={{\n      backgroundColor: '#a9f58c',\n      height: '100%',\n      direction: 'rtl',\n    }}\n  >\n    <KeyboardArrowRightIcon\n      style={{ height: '100%', marginRight: '10px', color: 'gray' }}\n    />\n    <DoneIcon style={{ height: '100%', marginRight: '10px' }} />\n  </div>\n);\n\nconst rightPanel = (\n  <div key=\"right-panel\" style={{ backgroundColor: '#ed837b', height: '100%' }}>\n    <KeyboardArrowLeftIcon\n      style={{ height: '100%', marginLeft: '10px', color: 'gray' }}\n    />\n    <DeleteIcon style={{ height: '100%', marginLeft: '10px' }} />\n  </div>\n);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.default,\n      flex: '1',\n      height: '90vh',\n      // border: '1px solid red',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      overflow: 'scroll',\n      // border: '1px solid blue',\n      backgroundColor: theme.palette.background.default,\n    },\n    enabledItem: {\n      backgroundColor: 'white',\n      marginTop: '2px',\n      marginBottom: '2px',\n      userSelect: 'none',\n      textDecoration: 'none',\n      opacity: '1',\n    },\n    disabledItem: {\n      backgroundColor: 'white',\n      marginTop: '2px',\n      marginBottom: '2px',\n      userSelect: 'none',\n      textDecoration: 'line-through',\n      opacity: '0.5',\n      '&:hover': {\n        textDecoration: 'line-through',\n      },\n    },\n    menuButton: {\n      color: theme.palette.grey[500],\n    },\n  })\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  return {\n    lists: state.lists.map(({ id, name, items }, index) => ({\n      id,\n      name,\n      comment: `${items.length} items`,\n      index,\n    })),\n  };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteList(index),\n  onEdit: (index: number) => actions.openEditListDialog(index),\n  onClick: (index: number) => actions.selectList(index),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight'> & {\n  onEdit: (index: number) => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={false}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: (index: number) => props.onEdit(index),\n          },\n        ],\n        [\n          {\n            label: 'Delete',\n            action: (index: number) => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import React, { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/slice';\n\ninterface Props {\n  isOpen: boolean;\n  children: ReactNode | ReactNode[];\n\n  title: string;\n  ok: string;\n  cancel?: string;\n  another?: string;\n\n  description: string;\n  isValid: boolean;\n\n  onClose: (commit: boolean) => void;\n  onOpen: () => void;\n}\n\nexport default function (props: Props) {\n  const dispatch = useDispatch();\n\n  function handleClose(commit: boolean, closeDialog: boolean = true) {\n    if (commit) {\n      props.onClose(true);\n    } else {\n      props.onClose(false);\n    }\n    if (closeDialog) {\n      dispatch(actions.closeDialog());\n    } else {\n      props.onOpen();\n    }\n  }\n\n  function handleOpen() {\n    props.onOpen();\n  }\n\n  return (\n    <div>\n      <Dialog\n        // full screen dialog works best on mobile\n        fullScreen\n        open={props.isOpen}\n        onEnter={() => handleOpen()}\n        onClose={() => handleClose(false)}\n      >\n        <DialogTitle>{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          {props.children}\n        </DialogContent>\n        <DialogActions>\n          {props.another !== undefined && (\n            <Button\n              onClick={() => handleClose(true, false)}\n              color=\"primary\"\n              disabled={!props.isValid}\n            >\n              {props.another}\n            </Button>\n          )}\n          {props.another !== undefined && <div style={{ flex: '1 0 0' }} />}\n          {props.cancel !== undefined && (\n            <Button onClick={() => handleClose(false)} color=\"primary\">\n              {props.cancel}\n            </Button>\n          )}\n          <Button\n            onClick={() => handleClose(true)}\n            color=\"primary\"\n            disabled={!props.isValid}\n          >\n            {props.ok}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","const regex = /(.*) (\\d+.*)/;\n\nfunction notNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nexport function importText(\n  rawText: string\n): { name: string; comment: string }[] {\n  return rawText\n    .split('\\n')\n    .map(txt => txt.trim())\n    .filter(txt => txt.length > 0)\n    .map(txt => {\n      const match = txt.match(regex);\n      if (!match) {\n        return null;\n      }\n      const [, name, comment] = match;\n      return { name, comment };\n    })\n    .filter(notNull);\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '../common/Dialog';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { importText } from '../../importer';\n\ninterface Props {\n  value: string;\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  // internal\n  isOpen: boolean;\n  isEdit: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst isValid = (newValue: string) => newValue.trim().length > 0;\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n  const [includeClipboard, setIncludeClipboard] = React.useState<{\n    includeClipboard: boolean;\n    items: { name: string; comment: string }[];\n  }>({\n    includeClipboard: false,\n    items: [],\n  });\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onCommit({\n        name: tmpValue,\n        items: includeClipboard.includeClipboard ? includeClipboard.items : [],\n      });\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n    setIncludeClipboard({ includeClipboard: false, items: [] });\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  async function importFromClipboard() {\n    try {\n      const txt = await navigator.clipboard.readText();\n      return importText(txt);\n    } catch (error) {\n      console.log(`Error importing from clipboard: ${error}`);\n      return [];\n    }\n  }\n\n  async function handleIncludeClipboard(event: any) {\n    const includeClipboard = event.target.checked;\n    const items = includeClipboard ? await importFromClipboard() : [];\n\n    setIncludeClipboard({\n      includeClipboard,\n      items,\n    });\n  }\n\n  const count = includeClipboard.includeClipboard\n    ? `${includeClipboard.items.length} `\n    : ' ';\n  const label = `Include ${count}items from clipboard`;\n  const allowedImport = navigator?.clipboard?.readText !== undefined;\n\n  const defaultFocus = React.useRef<any>(null);\n\n  return (\n    <Dialog\n      isOpen={props.isOpen}\n      isValid={isValidCheck}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      title={props.title}\n      description={props.descriptionText}\n      ok={props.okText}\n      another={props.anotherText}\n      cancel={props.cancelText}\n    >\n      <TextField\n        error={!isValidCheck}\n        inputRef={input => {\n          defaultFocus.current = input;\n        }}\n        margin=\"dense\"\n        label=\"List name\"\n        type=\"text\"\n        onChange={handleChange}\n        fullWidth\n        value={tmpValue}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      {!props.isEdit && allowedImport && (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={includeClipboard.includeClipboard}\n              onChange={handleIncludeClipboard}\n              color=\"primary\"\n            />\n          }\n          label={label}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_LIST,\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => value && actions.addList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst initialValue = '';\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={initialValue}\n      title=\"Create List\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      isEdit={false}\n      descriptionText=\"Pick the name for your new list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\ninterface SelectProps {\n  title: string;\n  choices: string[];\n  value: string | undefined;\n  onChange: (value: number) => void;\n}\n\nexport default function Select(props: SelectProps) {\n  return (\n    <div style={{ marginTop: 10 }}>\n      <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n        {props.title}\n      </InputLabel>\n      <NativeSelect\n        fullWidth\n        value={props.value}\n        onChange={event => props.onChange(event.target.selectedIndex)}\n      >\n        {props.choices.map((choice, index) => {\n          return (\n            <option value={choice} key={index}>\n              {choice}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </div>\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '../common/Dialog';\nimport Select from '../common/Select';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  listOptions?: string[];\n  categories: string[];\n  selectedList?: number;\n  // ...\n  isOpen: boolean;\n  value: { name: string; comment: string; category?: string };\n  onCommit: (value: {\n    name: string;\n    comment: string;\n    listIndex?: number;\n    category?: string;\n  }) => void;\n}\n\nconst isValid = ({ name, category }: Item) => ({\n  name: name.trim().length > 0,\n  // these are always valid\n  comment: true,\n  category: true,\n});\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState({\n    ...props.value,\n    category: props.value.category || '',\n  });\n  const [tmpList, setTmpList] = React.useState(props.selectedList);\n  const [showText, setShowText] = React.useState(false);\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      const { category } = tmpValue;\n      props.onCommit({\n        ...tmpValue,\n        category: category.trim().length <= 0 ? undefined : category,\n        listIndex: tmpList,\n      });\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue({ ...props.value, category: props.value.category || '' });\n    setValidCheck(isValid(props.value));\n    setTmpList(props.selectedList);\n    setShowText(false);\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleNameChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      name: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleCommentChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      comment: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleListChange(index: number) {\n    setTmpList(index);\n  }\n\n  function handleCategoryIndexChange(index: number) {\n    if (index === 0) {\n      const newValue = {\n        ...tmpValue,\n        category: '',\n      };\n      setTmpValue(newValue);\n      setValidCheck(isValid(newValue));\n      return;\n    }\n    if (index - 1 < props.categories.length) {\n      const newValue = {\n        ...tmpValue,\n        category: props.categories[index - 1],\n      };\n      setTmpValue(newValue);\n      setValidCheck(isValid(newValue));\n      return;\n    }\n\n    // set text to empty\n    const newValue = { ...tmpValue, category: '' };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n    setShowText(true);\n  }\n\n  function handleCategoryNameChange(event: any) {\n    const newValue = {\n      ...tmpValue,\n      category: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  const defaultFocus = React.useRef<any>(null);\n\n  const { category } = props.value;\n  const noCategories = props.categories.length <= 0;\n  const notInCategoryList =\n    category !== undefined && props.categories.indexOf(category) < 0;\n  const showDialogText = showText || noCategories || notInCategoryList;\n\n  return (\n    <div>\n      <Dialog\n        isOpen={props.isOpen}\n        description={props.descriptionText}\n        isValid={\n          isValidCheck.name && isValidCheck.comment && isValidCheck.category\n        }\n        onOpen={handleOpen}\n        onClose={handleClose}\n        title={props.title}\n        ok={props.okText}\n        another={props.anotherText}\n        cancel={props.cancelText}\n      >\n        <TextField\n          error={!isValidCheck.name}\n          inputRef={input => {\n            defaultFocus.current = input;\n          }}\n          margin=\"dense\"\n          label=\"Item name\"\n          placeholder=\"What's the name of the item?\"\n          type=\"text\"\n          onChange={handleNameChange}\n          fullWidth\n          value={tmpValue.name}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          error={!isValidCheck.comment}\n          margin=\"dense\"\n          label=\"Comment (optional)\"\n          placeholder=\"How many of this item?\"\n          value={tmpValue.comment}\n          onChange={handleCommentChange}\n          type=\"text\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {!showDialogText && (\n          <Select\n            title=\"Category\"\n            value={tmpValue.category}\n            onChange={index => handleCategoryIndexChange(index)}\n            choices={['[None]', ...props.categories, '[Add Category]']}\n          />\n        )}\n        {showDialogText && (\n          <TextField\n            autoFocus={true}\n            error={!isValidCheck.category}\n            margin=\"dense\"\n            label=\"Category (optional)\"\n            placeholder=\"Which category?\"\n            value={tmpValue.category}\n            onChange={handleCategoryNameChange}\n            type=\"text\"\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        )}\n        {props.listOptions && tmpList !== undefined && (\n          <Select\n            title=\"List (optional, moves item to another list)\"\n            value={props.listOptions[tmpList]}\n            onChange={handleListChange}\n            choices={props.listOptions}\n          />\n        )}\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport ItemDialog from './GenericDialog';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  isOpen: boolean;\n  categories: string[];\n  onCommit: (value: Item) => void;\n}\n\nconst initialValue: Item = { name: '', comment: '', category: undefined };\n\nexport default function (props: Props) {\n  return (\n    <ItemDialog\n      value={initialValue}\n      title=\"Create Item\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      descriptionText=\"Pick the name for your new item.\"\n      {...props}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\nimport { SimpleItem as Item } from '../../redux/state';\n\nexport function extractCategories(state: RootState) {\n  const set: Set<string> = new Set();\n  state.lists.forEach(list =>\n    list.items\n      .filter(item => item.category !== undefined)\n      .forEach(item => set.add(item.category!))\n  );\n  return Array.from(set);\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_ITEM,\n  categories: extractCategories(state),\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: Item) => value && actions.addItem(value),\n});\n\nexport default connector(Component);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState } = state;\n  if (\n    dialogState?.type === DialogType.EDIT_LIST &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists.length\n  ) {\n    const initialValue = state.lists[dialogState.index].name;\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: '',\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: string) => actions.editList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: string;\n  onCommit: (value: string) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      isEdit={true}\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n      onCommit={value => value && props.onCommit(value.name)}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\nimport { extractCategories } from './AddDialogContainer';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState, selectedList } = state;\n  if (\n    selectedList !== undefined &&\n    selectedList >= 0 &&\n    selectedList < state.lists.length &&\n    dialogState?.type === DialogType.EDIT_ITEM &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists[selectedList].items.length\n  ) {\n    const initialValue = state.lists[selectedList].items[dialogState.index];\n    return {\n      isOpen: true,\n      initialValue,\n      listOptions: state.lists.map(({ name }) => name),\n      selectedList,\n      categories: extractCategories(state),\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: { name: '', comment: '' },\n    categories: [],\n    listOptions: undefined,\n    selectedList: undefined,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: {\n    name: string;\n    comment: string;\n    listIndex?: number;\n    category?: string;\n  }) => value && actions.editItem(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\nimport { SimpleItem as Item } from '../../redux/state';\n\ninterface Props {\n  categories: string[];\n  isOpen: boolean;\n  initialValue: Item;\n  onCommit: (value: Item) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n    />\n  );\n}\n","// colors for categories\nexport const COLORS = [\n  '#70d470',\n  '#42af44',\n  '#ffdb66',\n  '#0076ff',\n  '#d5ff00',\n  '#ff937e',\n  '#007db5',\n  '#ff00f6',\n  '#90fb92',\n  '#7979fa',\n  '#f16d6d',\n  '#40f7f7',\n  '#ffa6fe',\n  '#6a826c',\n  '#ff029d',\n  '#fe8900',\n  '#7a4782',\n  '#7e2dd2',\n  '#85a900',\n  '#ff0056',\n  '#a42400',\n  '#00ae7e',\n  '#683d3b',\n  '#bdd393',\n  '#00b917',\n  '#9e008e',\n  '#c28c9f',\n  '#ff74a3',\n  '#01d0ff',\n  '#004754',\n  '#e56ffe',\n  '#788231',\n  '#0e4ca1',\n  '#91d0cb',\n  '#be9970',\n  '#968ae8',\n  '#bb8800',\n  '#deff74',\n  '#00ffc6',\n  '#ffe502',\n  '#620e00',\n  '#008f9c',\n  '#98ff52',\n  '#7544b1',\n  '#b500ff',\n  '#00ff78',\n  '#ff6e41',\n  '#005f39',\n  '#6b6882',\n  '#5fad4e',\n  '#a75740',\n  '#a5ffd2',\n  '#ffb167',\n  '#009bff',\n  '#e85ebe',\n];\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\nimport { Item } from '../../redux/state';\nimport { extractCategories } from './AddDialogContainer';\nimport { COLORS } from '../common/Colors';\n\nconst defaultSorter = (a: Item, b: Item) =>\n  Number(!a.enabled) - Number(!b.enabled);\n\nconst categorySorter = (a: Item, b: Item) => {\n  const defaultResult = defaultSorter(a, b);\n\n  if (defaultResult !== 0) {\n    return defaultResult;\n  }\n\n  const { category: aCategory } = a;\n  const { category: bCategory } = b;\n  if (aCategory === undefined || bCategory === undefined) {\n    return Number(aCategory === undefined) - Number(bCategory === undefined);\n  }\n  return aCategory.localeCompare(bCategory);\n};\n\nfunction buildMapper(state: RootState) {\n  const { categoryColorMapper } = state;\n\n  // use user-defined color mapper\n  if (categoryColorMapper !== undefined) {\n    return (category: string | undefined) => {\n      if (category === undefined) {\n        return undefined;\n      }\n      return categoryColorMapper[category];\n    };\n  }\n\n  // use default color array\n  const categories = extractCategories(state);\n  return (category: string | undefined) => {\n    if (category === undefined) {\n      return undefined;\n    }\n    const index = categories.indexOf(category);\n    if (index !== -1 && index < COLORS.length) {\n      return COLORS[index];\n    }\n    return undefined;\n  };\n}\n\nconst mapToListState = (state: RootState) => {\n  const index = state.selectedList;\n  const sorter =\n    state.sortMode === 'categories' ? categorySorter : defaultSorter;\n\n  if (index !== undefined) {\n    const extractColor =\n      state.categoryMode === 'color' ? buildMapper(state) : () => undefined;\n\n    return {\n      lists: state.lists[index].items\n        .map((item, index) => ({\n          ...item,\n          index,\n        }))\n        .sort(sorter),\n      categoryMode: state.categoryMode,\n      extractColor,\n    };\n  }\n  return { lists: [] };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteItem(index),\n  onEdit: (index: number) => actions.openEditItemDialog(index),\n  onClick: (index: number) => actions.toggleItem(index),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight'> & {\n  onEdit: (index: number) => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={true}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: (index: number) => props.onEdit(index),\n          },\n        ],\n        [\n          {\n            label: 'Delete',\n            action: (index: number) => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import { ConnectedProps, connect } from 'react-redux';\nimport React from 'react';\nimport AppBar from './app-bar/AppBarContainer';\nimport List from './shopping-list/ListContainer';\nimport AddListDialog from './shopping-list/AddDialogContainer';\nimport AddItemDialog from './item-list/AddDialogContainer';\nimport EditListDialog from './shopping-list/EditDialogContainer';\nimport EditItemDialog from './item-list/EditDialogContainer';\nimport ItemList from './item-list/ListContainer';\nimport { RootState } from '../redux/store';\nimport Notifier from './common/Notifier';\n\nconst connector = connect((state: RootState) => ({\n  isListSelected: state.selectedList !== undefined,\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction Main(props: Props) {\n  const children: JSX.Element[] = [];\n  const isItemView = props.isListSelected;\n  if (isItemView) {\n    children.push(<ItemList key=\"item-list\" />);\n    children.push(<AddItemDialog key=\"item-add-dialog\" />);\n    children.push(<EditItemDialog key=\"item-edit-dialog\" />);\n  } else {\n    children.push(<List key=\"list\" />);\n    children.push(<AddListDialog key=\"list-add-dialog\" />);\n    children.push(<EditListDialog key=\"list-edit-dialog\" />);\n  }\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        // border: '1px solid blue',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n      }}\n    >\n      <AppBar />\n      <Notifier />\n      {children}\n    </div>\n  );\n}\n\nexport default connector(Main);\n","import React from 'react';\nimport Main from './components/Main';\nimport {\n  // TODO: update version once warning is fixed, see: https://github.com/mui-org/material-ui/issues/13394\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  Theme,\n  makeStyles,\n  createStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  transitions: {\n    // Disable transitions since they make UI feel slow\n    create: () => 'none',\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      minHeight: '100vh',\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      flexDirection: 'column',\n    },\n  })\n);\n\nexport default function () {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shopper/App';\nimport { store } from './shopper/redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nfunction isDebug(): boolean {\n  const url = new URL(window.location.href);\n  const param = url.searchParams.get('debug');\n  return Boolean(param);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  console.log('No service worker enabled.');\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}