{"version":3,"sources":["shopper/redux/state.ts","shopper/redux/localStorage.ts","shopper/components/common/Notifier.tsx","shopper/redux/slice.ts","shopper/redux/store.ts","shopper/components/shopping-list/AddButton.tsx","shopper/components/shopping-list/AddButtonContainer.tsx","shopper/components/item-list/AddButton.tsx","shopper/components/item-list/AddButtonContainer.tsx","shopper/components/common/Menu.tsx","shopper/components/app-bar/AppBar.tsx","shopper/components/app-bar/AppBarContainer.tsx","version.ts","shopper/components/common/ContextMenu.tsx","shopper/components/common/List.tsx","shopper/components/shopping-list/ListContainer.tsx","shopper/components/common/Dialog.tsx","shopper/importer.ts","shopper/components/shopping-list/GenericDialog.tsx","shopper/components/shopping-list/AddDialogContainer.tsx","shopper/components/shopping-list/AddDialog.tsx","shopper/components/item-list/GenericDialog.tsx","shopper/components/item-list/AddDialog.tsx","shopper/components/item-list/AddDialogContainer.tsx","shopper/components/shopping-list/EditDialogContainer.tsx","shopper/components/shopping-list/EditDialog.tsx","shopper/components/item-list/EditDialogContainer.tsx","shopper/components/item-list/EditDialog.tsx","shopper/components/item-list/ListContainer.tsx","shopper/components/Main.tsx","shopper/App.tsx","serviceWorker.ts","index.tsx"],"names":["DialogType","ShopperStateSchema","title","type","properties","selectedList","lists","minItems","items","required","name","minLength","comment","enabled","additionalProperties","key","validate","obj","test","Ajv","allErrors","compile","schema","console","error","JSON","stringify","errors","Error","logger","toast","transition","cssTransition","enter","exit","duration","appendPosition","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","defaultValue","raw","localStorage","getItem","parse","load","undefined","isInBounds","index","array","length","shopperSlice","createSlice","reducers","addList","state","action","payload","push","map","editList","dialogState","EDIT_LIST","info","deleteList","splice","deleted","listUndo","selectList","deselectList","itemUndo","undoItemDeletion","listIndex","undo","pop","warn","undoListDeletion","addItem","editItem","EDIT_ITEM","itemIndex","item","deleteItem","toggleItem","openAddListDialog","ADD_LIST","openEditListDialog","openAddItemDialog","ADD_ITEM","openEditItemDialog","closeDialog","copyToClipboard","navigator","clipboard","writeText","updateState","actions","reducer","store","configureStore","sliceActions","importFromClipboard","dispatch","readText","then","value","catch","log","subscribe","shallowClone","setItem","save","getState","useStyles","makeStyles","theme","createStyles","button","color","connector","connect","openDialog","props","classes","IconButton","className","edge","aria-label","onClick","React","useState","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","flatMap","actionList","outerIndex","result","innerIndex","label","MenuItem","unshift","Divider","root","flexGrow","menuButton","rightButton","display","justifyContent","alignItems","list","listName","totalItemCount","pendingItemCount","reduce","prev","curr","Number","AppBar","Toolbar","Typography","variant","anchorPosition","top","y","left","x","anchorReference","mouse","useRef","time","handleMouseDown","e","current","screenX","Date","now","handleMouseClick","Math","abs","preventDefault","sorted","sort","a","b","onChangeIndex","start","i","onDelete","setState","handleOpenContextMenu","clientX","clientY","ContextMenu","List","component","panels","ListItem","enabledItem","disabledItem","onContextMenu","onMouseDown","ListItemText","primary","secondary","rightPanel","swipeRight","leftPanel","startIndex","enableMouseEvents","style","backgroundColor","height","direction","marginRight","marginLeft","palette","background","default","flex","flexDirection","overflow","userSelect","textDecoration","opacity","grey","dispatchToProps","onEdit","useDispatch","commit","onOpen","Dialog","fullScreen","isOpen","onEnter","DialogTitle","DialogContent","DialogContentText","description","children","DialogActions","another","Button","disabled","isValid","cancel","ok","regex","notNull","importText","rawText","split","txt","trim","filter","match","newValue","initialCheck","isValidCheck","setValidCheck","tmpValue","setTmpValue","includeClipboard","setIncludeClipboard","target","checked","count","allowedImport","defaultFocus","focus","onCommit","descriptionText","okText","anotherText","cancelText","TextField","inputRef","input","margin","onChange","fullWidth","InputLabelProps","shrink","isEdit","FormControlLabel","control","Checkbox","placeholder","initialValue","isListSelected","isItemView","flexFlow","Notifier","createMuiTheme","MuiButtonBase","disableRipple","transitions","create","app","minHeight","ThemeProvider","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","App","document","getElementById","param","URL","href","searchParams","get","isDebug","ready","unregister","message","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.15b4431b.chunk.js","sourcesContent":["import { ThunkAction, Action } from '@reduxjs/toolkit';\nexport interface Item {\n  name: string;\n  comment: string;\n  enabled: boolean;\n}\n\nconst ItemSchema = {\n  type: 'object',\n  required: ['name', 'enabled'],\n  properties: {\n    name: {\n      type: 'string',\n      minLength: 1,\n    },\n    comment: {\n      type: 'string',\n    },\n    enabled: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport interface List {\n  name: string;\n  items: Item[];\n}\n\nconst ListSchema = {\n  type: 'object',\n  required: ['name', 'items'],\n  properties: {\n    name: {\n      type: 'string',\n    },\n    items: {\n      type: 'array',\n      minItems: 0,\n      items: ItemSchema,\n    },\n  },\n};\n\nexport interface ShopperState {\n  selectedList?: number;\n  lists: List[];\n  // not in schema\n  dialogState?: DialogState;\n  listUndo?: List[];\n  itemUndo?: Item[];\n}\n\nexport const ShopperStateSchema = {\n  title: 'ShopperState',\n  type: 'object',\n  properties: {\n    selectedList: {\n      type: 'number',\n    },\n    lists: {\n      type: 'array',\n      minItems: 0,\n      items: ListSchema,\n    },\n  },\n  additionalProperties: false,\n  required: ['lists'],\n};\n\n// not in schema\nexport enum DialogType {\n  ADD_LIST,\n  EDIT_LIST,\n  ADD_ITEM,\n  EDIT_ITEM,\n}\n\nexport interface AddListDialog {\n  type: DialogType.ADD_LIST;\n}\nexport interface AddItemDialog {\n  type: DialogType.ADD_ITEM;\n}\n\nexport interface EditListDialog {\n  type: DialogType.EDIT_LIST;\n  index: number;\n}\n\nexport interface EditItemDialog {\n  type: DialogType.EDIT_ITEM;\n  index: number;\n}\n\nexport type DialogState =\n  | AddListDialog\n  | AddItemDialog\n  | EditListDialog\n  | EditItemDialog;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  ShopperState,\n  unknown,\n  Action<string>\n>;\n","import Ajv from 'ajv';\n\nimport type { ShopperState } from './state';\nimport { ShopperStateSchema as schema } from './state';\n\nconst key = 'shopper-state';\n\nexport function validate(obj: unknown): ShopperState {\n  const ajv = new Ajv({ allErrors: true });\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return obj as ShopperState;\n  }\n  console.error(`Existing state object:\n${JSON.stringify(obj, null, 2)}\nFailed validation:\n${JSON.stringify(test.errors, null, 2)}`);\n\n  throw Error('Invalid object');\n}\n\nexport function load(defaultValue: ShopperState): ShopperState {\n  const raw = localStorage.getItem(key);\n  if (raw === null) {\n    return defaultValue;\n  }\n  const object = JSON.parse(raw);\n  return validate(object);\n}\n\nexport function save(state: ShopperState) {\n  const shallowClone = {\n    ...state,\n    // ensure not saved\n    dialogState: undefined,\n    listUndo: undefined,\n    itemUndo: undefined,\n  };\n  localStorage.setItem(key, JSON.stringify(shallowClone));\n}\n","import React from 'react';\nimport { ToastContainer, cssTransition, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const logger = toast;\n\nexport default function () {\n  // copied from Slide to change durations\n  // https://github.com/fkhadra/react-toastify/blob/da5fab4006456434d7ad29360aa702d2c725a9a1/src/components/Transitions.tsx\n  const transition = cssTransition({\n    enter: `Toastify__slide-enter`,\n    exit: `Toastify__slide-exit`,\n    duration: [200, 200],\n    appendPosition: true,\n  });\n\n  // more customization?\n  // https://github.com/fkhadra/react-toastify/issues/455\n\n  return (\n    <ToastContainer\n      transition={transition}\n      position=\"bottom-left\"\n      autoClose={2000}\n      hideProgressBar={true}\n      newestOnTop={true}\n      closeOnClick={false}\n      rtl={false}\n      pauseOnFocusLoss={false}\n      draggable={false}\n      pauseOnHover={false}\n    />\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ShopperState, DialogType, AppThunk } from './state';\nimport { load, validate } from './localStorage';\nimport { logger } from '../components/common/Notifier';\n\nconst defaultValue: ShopperState = {\n  selectedList: undefined,\n  lists: [],\n};\n\nconst initialState: ShopperState = load(defaultValue);\n\nconst isInBounds = <T>(index: number, array: T[]) =>\n  index >= 0 && index < array.length;\n\nexport const shopperSlice = createSlice({\n  name: 'shopper',\n  initialState,\n  reducers: {\n    // list\n    addList: (\n      state,\n      action: PayloadAction<{\n        name: string;\n        items: { name: string; comment: string }[];\n      }>\n    ) => {\n      const { name, items } = action.payload;\n      state.lists.push({\n        name,\n        items: items.map(({ name, comment }) => ({\n          name,\n          comment,\n          enabled: true,\n        })),\n      });\n    },\n    editList: (state, action: PayloadAction<string>) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_LIST) {\n        const { index } = dialogState;\n        const name = action.payload;\n        if (isInBounds(index, state.lists)) {\n          state.lists[index].name = name;\n          logger.info('List updated');\n        }\n      }\n    },\n    deleteList: (state, action: PayloadAction<number>) => {\n      const index = action.payload;\n      if (isInBounds(index, state.lists)) {\n        const [deleted] = state.lists.splice(index, 1);\n\n        if (state.listUndo === undefined) {\n          state.listUndo = [];\n        }\n        state.listUndo.push(deleted);\n\n        logger.info(`List \"${deleted.name}\" deleted`);\n      }\n    },\n    selectList: (state, action: PayloadAction<number>) => {\n      state.selectedList = action.payload;\n    },\n    deselectList: state => {\n      state.selectedList = undefined;\n      state.itemUndo = undefined;\n    },\n    // undo\n    undoItemDeletion: state => {\n      const listIndex = state.selectedList;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        state.itemUndo !== undefined &&\n        state.itemUndo.length > 0\n      ) {\n        const undo = state.itemUndo.pop();\n        if (undo !== undefined) {\n          state.lists[listIndex].items.push(undo);\n          logger.info('Item restored');\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    undoListDeletion: state => {\n      if (state.listUndo !== undefined && state.listUndo.length > 0) {\n        const undo = state.listUndo.pop();\n        if (undo !== undefined) {\n          state.lists.push(undo);\n          logger.info(`List \"${undo.name}\" restored`);\n          return;\n        }\n      }\n      logger.warn('Nothing to undo');\n    },\n    // item\n    addItem: (\n      state,\n      action: PayloadAction<{ name: string; comment: string }>\n    ) => {\n      const { name, comment } = action.payload;\n      const listIndex = state.selectedList;\n      if (listIndex !== undefined && isInBounds(listIndex, state.lists)) {\n        state.lists[listIndex].items.push({\n          name,\n          comment,\n          enabled: true,\n        });\n      }\n    },\n    editItem: (\n      state,\n      action: PayloadAction<{ name: string; comment: string }>\n    ) => {\n      const { dialogState } = state;\n      if (dialogState && dialogState.type === DialogType.EDIT_ITEM) {\n        const { index } = dialogState;\n        const { name, comment } = action.payload;\n        const listIndex = state.selectedList;\n        const itemIndex = index;\n        if (\n          listIndex !== undefined &&\n          isInBounds(listIndex, state.lists) &&\n          isInBounds(itemIndex, state.lists[listIndex].items)\n        ) {\n          const item = state.lists[listIndex].items[itemIndex];\n          item.name = name;\n          item.comment = comment;\n        }\n\n        logger.info('Item updated');\n      }\n    },\n    deleteItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const [deleted] = state.lists[listIndex].items.splice(itemIndex, 1);\n\n        if (state.itemUndo === undefined) {\n          state.itemUndo = [];\n        }\n        state.itemUndo.push(deleted);\n\n        logger.info('Item deleted');\n      }\n    },\n    toggleItem: (state, action: PayloadAction<number>) => {\n      const listIndex = state.selectedList;\n      const itemIndex = action.payload;\n      if (\n        listIndex !== undefined &&\n        isInBounds(listIndex, state.lists) &&\n        isInBounds(itemIndex, state.lists[listIndex].items)\n      ) {\n        const item = state.lists[listIndex].items[itemIndex];\n        item.enabled = !item.enabled;\n      }\n    },\n    // dialog\n    openAddListDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_LIST,\n      };\n    },\n    openEditListDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_LIST,\n        index: action.payload,\n      };\n    },\n    openAddItemDialog: state => {\n      state.dialogState = {\n        type: DialogType.ADD_ITEM,\n      };\n    },\n    openEditItemDialog: (state, action: PayloadAction<number>) => {\n      state.dialogState = {\n        type: DialogType.EDIT_ITEM,\n        index: action.payload,\n      };\n    },\n    closeDialog: state => {\n      state.dialogState = undefined;\n    },\n    copyToClipboard: state => {\n      if (navigator?.clipboard?.writeText) {\n        navigator.clipboard.writeText(JSON.stringify(state));\n        logger.info('Copied to clipboard');\n      } else {\n        logger.error('ERROR: denied use of browser clipboard');\n      }\n    },\n    updateState: (state, action: PayloadAction<ShopperState>) => {\n      state.lists = action.payload.lists;\n      state.selectedList = undefined;\n    },\n  },\n});\n\nexport const importFromClipboard = (): AppThunk => dispatch => {\n  if (navigator?.clipboard?.readText) {\n    navigator.clipboard\n      .readText()\n      .then(value => {\n        const obj = JSON.parse(value);\n        const state = validate(obj);\n        dispatch(actions.updateState(state));\n        logger.info('Imported from clipboard');\n      })\n      .catch(error => {\n        console.log(error);\n        logger.error(`ERROR: ${error}`);\n      });\n  } else {\n    logger.error('ERROR: denied use of browser clipboard');\n  }\n};\n\nexport const { actions, reducer } = shopperSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { reducer, actions as sliceActions, importFromClipboard } from './slice';\nimport { save } from './localStorage';\n\nexport const store = configureStore({ reducer });\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const actions = {\n  ...sliceActions,\n  importFromClipboard,\n};\n\n// auto-save\nstore.subscribe(() => {\n  const state = store.getState();\n  save(state);\n  // console.log(JSON.stringify(state));\n});\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add list\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddListDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface Props {\n  openDialog: () => void;\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      className={classes.button}\n      edge=\"end\"\n      title=\"Add item\"\n      color=\"secondary\"\n      aria-label=\"add\"\n      onClick={() => props.openDialog()}\n    >\n      <AddIcon />\n    </IconButton>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import { connect } from 'react-redux';\nimport { actions } from '../../redux/store';\nimport Component from './AddButton';\n\nconst connector = connect(() => ({}), {\n  openDialog: () => actions.openAddItemDialog(),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  actions: {\n    label: string;\n    action: () => void;\n  }[][];\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        className={classes.button}\n        aria-controls=\"simple-menu\"\n        edge=\"end\"\n        aria-label=\"menu\"\n        color=\"secondary\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.actions.flatMap((actionList, outerIndex) => {\n          const result = actionList.map(({ label, action }, innerIndex) => (\n            <MenuItem\n              key={`outer=${outerIndex}-inner${innerIndex}`}\n              onClick={() => {\n                handleClose();\n                action();\n              }}\n            >\n              {label}\n            </MenuItem>\n          ));\n          // add separator if adding a new set of actions\n          if (outerIndex !== 0) {\n            result.unshift(<Divider key={`divider-${outerIndex}`} />);\n          }\n          return result;\n        })}\n      </Menu>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: 'inherit',\n    },\n  })\n);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/ArrowBackRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddList from '../shopping-list/AddButtonContainer';\nimport AddItem from '../item-list/AddButtonContainer';\nimport Menu from '../common/Menu';\n\nimport version from '../../../version';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 0,\n    },\n    title: {\n      flexGrow: 0,\n    },\n    menuButton: {\n      flexGrow: 0,\n    },\n    rightButton: {\n      // flexDirection: 'row',\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      // border: '1px solid blue',\n    },\n  })\n);\n\ninterface Props {\n  selectedList?: {\n    listName: string;\n    pendingItemCount: number;\n    totalItemCount: number;\n  };\n  deselectList: () => void;\n  copyToClipboard: () => void;\n  importFromClipboard: () => void;\n  undoItemDeletion: () => void;\n  undoListDeletion: () => void;\n}\n\nconst shopperTitle = 'Shopper';\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n\n  let title = shopperTitle;\n  if (props.selectedList) {\n    const { listName, pendingItemCount, totalItemCount } = props.selectedList;\n    title = listName!;\n    if (totalItemCount! > 0) {\n      title = `(${pendingItemCount}) ${title}`;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.selectedList && (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => props.deselectList()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => {\n              if (title === shopperTitle) {\n                toast.info(version);\n              }\n            }}\n          >\n            {title}\n          </Typography>\n          <div className={classes.rightButton}>\n            {props.selectedList ? <AddItem /> : <AddList />}\n          </div>\n          <Menu\n            actions={[\n              [\n                {\n                  label: 'import state from clipboard',\n                  action: () => props.importFromClipboard(),\n                },\n                {\n                  label: 'copy state to clipboard',\n                  action: () => props.copyToClipboard(),\n                },\n              ],\n              [\n                {\n                  label: `undo ${\n                    props.selectedList ? 'item' : 'list'\n                  } deletion`,\n                  action: () =>\n                    props.selectedList\n                      ? props.undoItemDeletion()\n                      : props.undoListDeletion(),\n                },\n              ],\n            ]}\n          ></Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport type { RootState } from '../../redux/store';\nimport { actions } from '../../redux/store';\nimport Component from './AppBar';\n\nexport const mapStateToProps = (state: RootState) => {\n  if (state.selectedList !== undefined) {\n    const list = state.lists[state.selectedList!];\n    const listName = list.name;\n    const totalItemCount = list.items.length;\n    const pendingItemCount = list.items.reduce(\n      (prev, curr) => prev + Number(!!curr.enabled),\n      0\n    );\n    return {\n      selectedList: {\n        totalItemCount,\n        pendingItemCount,\n        listName,\n      },\n    };\n  }\n\n  return {\n    selectedList: undefined,\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  deselectList: () => actions.deselectList(),\n  copyToClipboard: () => actions.copyToClipboard(),\n  importFromClipboard: () => actions.importFromClipboard(),\n  undoItemDeletion: () => actions.undoItemDeletion(),\n  undoListDeletion: () => actions.undoListDeletion(),\n});\n\nexport default connector(Component);\n","export default 'commit: 7cdd044 (2020-06-21T19:13:18.067Z)';\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\ninterface Props {\n  position?: {\n    x: number;\n    y: number;\n    index: number;\n  };\n\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n\n  onClose: () => void;\n}\n\nexport default function (props: Props) {\n  const open = props.position !== undefined;\n  const anchorPosition =\n    props.position !== undefined\n      ? { top: props.position.y, left: props.position.x }\n      : undefined;\n\n  return (\n    <Menu\n      keepMounted\n      open={open}\n      onClose={() => props.onClose()}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={anchorPosition}\n    >\n      {props.actions.flatMap((actionList, outerIndex) => {\n        const result = actionList.map(({ label, action }, innerIndex) => (\n          <MenuItem\n            key={`outer=${outerIndex}-inner${innerIndex}`}\n            onClick={() => {\n              if (props.position) {\n                // store in case of changes\n                const { index } = props.position;\n                props.onClose();\n                if (index !== null) {\n                  action(index);\n                }\n              }\n            }}\n          >\n            {label}\n          </MenuItem>\n        ));\n        // add separator if adding a new set of actions\n        if (outerIndex !== 0) {\n          result.unshift(<Divider key={`divider-${outerIndex}`} />);\n        }\n        return result;\n      })}\n    </Menu>\n  );\n}\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ContextMenu from './ContextMenu';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// TODO: update SwipeableViews to remove \"Legacy context API has been detected within a strict-mode tree\" warning. See: https://github.com/oliviertassinari/react-swipeable-views/issues/596\nimport SwipeableViews from 'react-swipeable-views';\n\nexport interface Props {\n  lists: { name: string; comment: string; enabled?: boolean; index: number }[];\n  onClick: (index: number) => void;\n  onDelete: (index: number) => void;\n  swipeRight: boolean;\n  actions: {\n    label: string;\n    action: (index: number) => void;\n  }[][];\n}\n\nexport default function (props: Props) {\n  const classes = useStyles();\n\n  const mouse = React.useRef({ x: 0, time: 0 });\n\n  const handleMouseDown = (e: any) => {\n    mouse.current.x = e.screenX;\n    mouse.current.time = Date.now();\n  };\n\n  const handleMouseClick = (index: number) => (e: React.MouseEvent) => {\n    // some horizontal movement, ignore click\n    const delta = Math.abs(e.screenX - mouse.current.x);\n    if (delta > 10) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.type === 'click') {\n      props.onClick(index);\n      return;\n    }\n  };\n\n  // sorts list using only enabled / disabled\n  const sorted = props.lists.sort(\n    (a, b) => Number(!a.enabled) - Number(!b.enabled)\n  );\n\n  // on swipe index change\n  const onChangeIndex = (index: number, start: number) => (i: number) => {\n    if (i < start) {\n      props.onClick(index);\n      return;\n    }\n    if (i > start) {\n      props.onDelete(index);\n      return;\n    }\n  };\n\n  const [state, setState] = React.useState<\n    | {\n        x: number;\n        y: number;\n        index: number;\n      }\n    | undefined\n  >(undefined);\n\n  const handleOpenContextMenu = (index: number) => (\n    event: React.MouseEvent<HTMLDivElement>\n  ) => {\n    event.preventDefault();\n    setState({\n      x: event.clientX - 4,\n      y: event.clientY - 4,\n      index,\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setState(undefined);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ContextMenu\n        position={state}\n        onClose={handleCloseContextMenu}\n        actions={props.actions}\n      />\n      <List component=\"nav\" className={classes.list}>\n        {sorted.map(({ name, comment, enabled, index }) => {\n          const panels = [\n            <ListItem\n              key=\"middle-panel\"\n              className={\n                enabled !== false ? classes.enabledItem : classes.disabledItem\n              }\n              button\n              onContextMenu={handleOpenContextMenu(index)}\n              onClick={handleMouseClick(index)}\n              onMouseDown={handleMouseDown}\n            >\n              <ListItemText primary={name} secondary={comment} />\n            </ListItem>,\n            rightPanel,\n          ];\n          if (props.swipeRight) {\n            panels.unshift(leftPanel);\n          }\n          const startIndex = props.swipeRight ? 1 : 0;\n          return (\n            <SwipeableViews\n              // hack: changes the key value to force new item on enabled/disabled\n              // since otherwise SwipeableViews will remain on swiped panel.\n              key={`${name}-${index}-${enabled}`}\n              index={startIndex}\n              enableMouseEvents\n              onChangeIndex={onChangeIndex(index, startIndex)}\n            >\n              {panels}\n            </SwipeableViews>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nconst leftPanel = (\n  <div\n    key=\"left-panel\"\n    style={{\n      backgroundColor: '#a9f58c',\n      height: '100%',\n      direction: 'rtl',\n    }}\n  >\n    <KeyboardArrowRightIcon\n      style={{ height: '100%', marginRight: '10px', color: 'gray' }}\n    />\n    <DoneIcon style={{ height: '100%', marginRight: '10px' }} />\n  </div>\n);\n\nconst rightPanel = (\n  <div key=\"right-panel\" style={{ backgroundColor: '#ed837b', height: '100%' }}>\n    <KeyboardArrowLeftIcon\n      style={{ height: '100%', marginLeft: '10px', color: 'gray' }}\n    />\n    <DeleteIcon style={{ height: '100%', marginLeft: '10px' }} />\n  </div>\n);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.default,\n      flex: '1',\n      height: '90vh',\n      // border: '1px solid red',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      overflow: 'scroll',\n      // border: '1px solid blue',\n    },\n    enabledItem: {\n      userSelect: 'none',\n      textDecoration: 'none',\n      opacity: '1',\n    },\n    disabledItem: {\n      userSelect: 'none',\n      textDecoration: 'line-through',\n      opacity: '0.5',\n      '&:hover': {\n        textDecoration: 'line-through',\n      },\n    },\n    menuButton: {\n      color: theme.palette.grey[500],\n    },\n  })\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  return {\n    lists: state.lists.map(({ name, items }, index) => ({\n      name,\n      comment: `${items.length} items`,\n      index,\n    })),\n  };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteList(index),\n  onEdit: (index: number) => actions.openEditListDialog(index),\n  onClick: (index: number) => actions.selectList(index),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight'> & {\n  onEdit: (index: number) => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={false}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: (index: number) => props.onEdit(index),\n          },\n        ],\n        [\n          {\n            label: 'Delete',\n            action: (index: number) => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import React, { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/slice';\n\ninterface Props {\n  isOpen: boolean;\n  children: ReactNode | ReactNode[];\n\n  title: string;\n  ok: string;\n  cancel: string;\n  another?: string;\n\n  description: string;\n  isValid: boolean;\n\n  onClose: (commit: boolean) => void;\n  onOpen: () => void;\n}\n\nexport default function (props: Props) {\n  const dispatch = useDispatch();\n\n  function handleClose(commit: boolean, closeDialog: boolean = true) {\n    if (commit) {\n      props.onClose(true);\n    } else {\n      props.onClose(false);\n    }\n    if (closeDialog) {\n      dispatch(actions.closeDialog());\n    } else {\n      props.onOpen();\n    }\n  }\n\n  function handleOpen() {\n    props.onOpen();\n  }\n\n  return (\n    <div>\n      <Dialog\n        // full screen dialog works best on mobile\n        fullScreen\n        open={props.isOpen}\n        onEnter={() => handleOpen()}\n        onClose={() => handleClose(false)}\n      >\n        <DialogTitle>{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          {props.children}\n        </DialogContent>\n        <DialogActions>\n          {props.another !== undefined && (\n            <Button\n              onClick={() => handleClose(true, false)}\n              color=\"primary\"\n              disabled={!props.isValid}\n            >\n              {props.another}\n            </Button>\n          )}\n          {props.another !== undefined && <div style={{ flex: '1 0 0' }} />}\n          <Button onClick={() => handleClose(false)} color=\"primary\">\n            {props.cancel}\n          </Button>\n          <Button\n            onClick={() => handleClose(true)}\n            color=\"primary\"\n            disabled={!props.isValid}\n          >\n            {props.ok}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","const regex = /(.*) (\\d+.*)/;\n\nfunction notNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nexport function importText(\n  rawText: string\n): { name: string; comment: string }[] {\n  return rawText\n    .split('\\n')\n    .map(txt => txt.trim())\n    .filter(txt => txt.length > 0)\n    .map(txt => {\n      const match = txt.match(regex);\n      if (!match) {\n        return null;\n      }\n      const [, name, comment] = match;\n      return { name, comment };\n    })\n    .filter(notNull);\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '../common/Dialog';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { importText } from '../../importer';\n\ninterface Props {\n  value: string;\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  // internal\n  isOpen: boolean;\n  isEdit: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst isValid = (newValue: string) => newValue.trim().length > 0;\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n  const [includeClipboard, setIncludeClipboard] = React.useState<{\n    includeClipboard: boolean;\n    items: { name: string; comment: string }[];\n  }>({\n    includeClipboard: false,\n    items: [],\n  });\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onCommit({\n        name: tmpValue,\n        items: includeClipboard.includeClipboard ? includeClipboard.items : [],\n      });\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n    setIncludeClipboard({ includeClipboard: false, items: [] });\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  async function importFromClipboard() {\n    try {\n      const txt = await navigator.clipboard.readText();\n      return importText(txt);\n    } catch (error) {\n      console.log(`Error importing from clipboard: ${error}`);\n      return [];\n    }\n  }\n\n  async function handleIncludeClipboard(event: any) {\n    const includeClipboard = event.target.checked;\n    const items = includeClipboard ? await importFromClipboard() : [];\n\n    setIncludeClipboard({\n      includeClipboard,\n      items,\n    });\n  }\n\n  const count = includeClipboard.includeClipboard\n    ? `${includeClipboard.items.length} `\n    : ' ';\n  const label = `Include ${count}items from clipboard`;\n  const allowedImport = navigator?.clipboard?.readText !== undefined;\n\n  const defaultFocus = React.useRef<any>(null);\n\n  return (\n    <Dialog\n      isOpen={props.isOpen}\n      isValid={isValidCheck}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      title={props.title}\n      description={props.descriptionText}\n      ok={props.okText}\n      another={props.anotherText}\n      cancel={props.cancelText}\n    >\n      <TextField\n        error={!isValidCheck}\n        inputRef={input => {\n          defaultFocus.current = input;\n        }}\n        margin=\"dense\"\n        label=\"List name\"\n        type=\"text\"\n        onChange={handleChange}\n        fullWidth\n        value={tmpValue}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      {!props.isEdit && allowedImport && (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={includeClipboard.includeClipboard}\n              onChange={handleIncludeClipboard}\n              color=\"primary\"\n            />\n          }\n          label={label}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_LIST,\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => value && actions.addList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onCommit: (value: {\n    name: string;\n    items: { name: string; comment: string }[];\n  }) => void;\n}\n\nconst initialValue = '';\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={initialValue}\n      title=\"Create List\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      isEdit={false}\n      descriptionText=\"Pick the name for your new list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '../common/Dialog';\n\ninterface Props {\n  title: string;\n  okText: string;\n  cancelText: string;\n  anotherText?: string;\n  descriptionText: string;\n  // ...\n  isOpen: boolean;\n  value: { name: string; comment: string };\n  onCommit: (value: { name: string; comment: string }) => void;\n}\n\nconst isValid = (newValue: { name: string; comment: string }) => ({\n  name: newValue.name.trim().length > 0,\n  // comments are always valid\n  comment: true,\n});\n\nexport default function (props: Props) {\n  const initialCheck = isValid(props.value);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(props.value);\n\n  function handleClose(commit: boolean) {\n    if (commit) {\n      props.onCommit(tmpValue);\n    }\n  }\n\n  function handleOpen() {\n    setTmpValue(props.value);\n    setValidCheck(isValid(props.value));\n    if (defaultFocus.current) {\n      defaultFocus.current.focus();\n    }\n  }\n\n  function handleNameChange(event: any) {\n    const newValue = {\n      name: event.target.value,\n      comment: tmpValue.comment,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  function handleCommentChange(event: any) {\n    const newValue = {\n      name: tmpValue.name,\n      comment: event.target.value,\n    };\n    setTmpValue(newValue);\n    setValidCheck(isValid(newValue));\n  }\n\n  const defaultFocus = React.useRef<any>(null);\n\n  return (\n    <div>\n      <Dialog\n        isOpen={props.isOpen}\n        description={props.descriptionText}\n        isValid={isValidCheck.name && isValidCheck.comment}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        title={props.title}\n        ok={props.okText}\n        another={props.anotherText}\n        cancel={props.cancelText}\n      >\n        <TextField\n          error={!isValidCheck.name}\n          inputRef={input => {\n            defaultFocus.current = input;\n          }}\n          margin=\"dense\"\n          label=\"Item name\"\n          placeholder=\"What's the name of the item?\"\n          type=\"text\"\n          onChange={handleNameChange}\n          fullWidth\n          value={tmpValue.name}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          error={!isValidCheck.comment}\n          margin=\"dense\"\n          label=\"Comment (optional)\"\n          placeholder=\"How many of this item?\"\n          value={tmpValue.comment}\n          onChange={handleCommentChange}\n          type=\"text\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport ItemDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  onCommit: (value: { name: string; comment: string }) => void;\n}\n\nconst initialValue = { name: '', comment: '' };\n\nexport default function (props: Props) {\n  return (\n    <ItemDialog\n      value={initialValue}\n      title=\"Create Item\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      anotherText=\"Add Another\"\n      descriptionText=\"Pick the name for your new item.\"\n      {...props}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './AddDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: state.dialogState?.type === DialogType.ADD_ITEM,\n});\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: { name: string; comment: string }) =>\n    value && actions.addItem(value),\n});\n\nexport default connector(Component);\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState } = state;\n  if (\n    dialogState?.type === DialogType.EDIT_LIST &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists.length\n  ) {\n    const initialValue = state.lists[dialogState.index].name;\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: '',\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: string) => actions.editList(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: string;\n  onCommit: (value: string) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      isEdit={true}\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n      onCommit={value => value && props.onCommit(value.name)}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport Component from './EditDialog';\nimport { DialogType } from '../../redux/state';\n\nconst mapStateToProps = (state: RootState) => {\n  const { dialogState, selectedList } = state;\n  if (\n    selectedList !== undefined &&\n    selectedList >= 0 &&\n    selectedList < state.lists.length &&\n    dialogState?.type === DialogType.EDIT_ITEM &&\n    dialogState.index >= 0 &&\n    dialogState.index < state.lists[selectedList].items.length\n  ) {\n    const initialValue = state.lists[selectedList].items[dialogState.index];\n    return {\n      isOpen: true,\n      initialValue,\n    };\n  }\n  return {\n    isOpen: false,\n    initialValue: { name: '', comment: '' },\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  onCommit: (value: { name: string; comment: string }) =>\n    value && actions.editItem(value),\n});\n\nexport default connector(Component);\n","import React from 'react';\nimport ListDialog from './GenericDialog';\n\ninterface Props {\n  isOpen: boolean;\n  initialValue: { name: string; comment: string };\n  onCommit: (value: { name: string; comment: string }) => void;\n}\n\nexport default function (props: Props) {\n  return (\n    <ListDialog\n      value={props.initialValue}\n      title=\"Edit List\"\n      okText=\"Update\"\n      cancelText=\"Cancel\"\n      descriptionText=\"Pick the name for your list.\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions, RootState } from '../../redux/store';\nimport List, { Props as ListProps } from '../common/List';\n\nconst mapToListState = (state: RootState) => {\n  const index = state.selectedList;\n  if (index !== undefined) {\n    return {\n      lists: state.lists[index].items.map(\n        ({ name, comment, enabled }, index) => ({\n          name,\n          comment,\n          enabled,\n          index,\n        })\n      ),\n    };\n  }\n  return { lists: [] };\n};\n\nconst dispatchToProps = {\n  onDelete: (index: number) => actions.deleteItem(index),\n  onEdit: (index: number) => actions.openEditItemDialog(index),\n  onClick: (index: number) => actions.toggleItem(index),\n};\n\ntype Props = Omit<ListProps, 'actions' | 'swipeRight'> & {\n  onEdit: (index: number) => void;\n};\n\nfunction ListWithContextMenu(props: Props) {\n  return (\n    <List\n      {...props}\n      swipeRight={true}\n      actions={[\n        [\n          {\n            label: 'Edit',\n            action: (index: number) => props.onEdit(index),\n          },\n          // TODO: add a move to another list\n        ],\n        [\n          {\n            label: 'Delete',\n            action: (index: number) => props.onDelete(index),\n          },\n        ],\n      ]}\n    />\n  );\n}\n\nconst connector = connect(mapToListState, dispatchToProps);\nexport default connector(ListWithContextMenu);\n","import { ConnectedProps, connect } from 'react-redux';\nimport React from 'react';\nimport AppBar from './app-bar/AppBarContainer';\nimport List from './shopping-list/ListContainer';\nimport AddListDialog from './shopping-list/AddDialogContainer';\nimport AddItemDialog from './item-list/AddDialogContainer';\nimport EditListDialog from './shopping-list/EditDialogContainer';\nimport EditItemDialog from './item-list/EditDialogContainer';\nimport ItemList from './item-list/ListContainer';\nimport { RootState } from '../redux/store';\nimport Notifier from './common/Notifier';\n\nconst connector = connect((state: RootState) => ({\n  isListSelected: state.selectedList !== undefined,\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction Main(props: Props) {\n  const isItemView = props.isListSelected;\n  return (\n    <div\n      style={{\n        flex: 1,\n        // border: '1px solid blue',\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100%',\n      }}\n    >\n      <AppBar />\n      {isItemView ? <ItemList /> : <List />}\n      {isItemView ? <AddItemDialog /> : <AddListDialog />}\n      {isItemView ? <EditItemDialog /> : <EditListDialog />}\n      <Notifier />\n    </div>\n  );\n}\n\nexport default connector(Main);\n","import React from 'react';\nimport Main from './components/Main';\nimport {\n  // TODO: update version once warning is fixed, see: https://github.com/mui-org/material-ui/issues/13394\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  Theme,\n  makeStyles,\n  createStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  transitions: {\n    // Disable transitions since they make UI feel slow\n    create: () => 'none',\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    app: {\n      minHeight: '100vh',\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      flexDirection: 'column',\n    },\n  })\n);\n\nexport default function () {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.app}>\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shopper/App';\nimport { store } from './shopper/redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nfunction isDebug(): boolean {\n  const url = new URL(window.location.href);\n  const param = url.searchParams.get('debug');\n  return Boolean(param);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  console.log('No service worker enabled.');\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}